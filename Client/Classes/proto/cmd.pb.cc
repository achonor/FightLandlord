// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class MainProtoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MainProto> {
} _MainProto_default_instance_;
class MessagePeopleReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessagePeopleReq> {
} _MessagePeopleReq_default_instance_;
class MessagePeopleRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessagePeopleRsp> {
} _MessagePeopleRsp_default_instance_;
class MessageLoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageLoginReq> {
} _MessageLoginReq_default_instance_;
class MessageLoginRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageLoginRsp> {
} _MessageLoginRsp_default_instance_;
class MessageStartGameReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageStartGameReq> {
} _MessageStartGameReq_default_instance_;
class MessageStartGameRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageStartGameRsp> {
} _MessageStartGameRsp_default_instance_;
class MessageDealReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageDealReq> {
} _MessageDealReq_default_instance_;
class MessageDealRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageDealRsp> {
} _MessageDealRsp_default_instance_;
class MessageUpdateStateReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageUpdateStateReq> {
} _MessageUpdateStateReq_default_instance_;
class MessageUpdateStateRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageUpdateStateRsp> {
} _MessageUpdateStateRsp_default_instance_;
class MessageGradLandlordReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageGradLandlordReq> {
} _MessageGradLandlordReq_default_instance_;
class MessageGradLandlordRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageGradLandlordRsp> {
} _MessageGradLandlordRsp_default_instance_;
class MessageOutPokerReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageOutPokerReq> {
} _MessageOutPokerReq_default_instance_;
class MessageOutPokerRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageOutPokerRsp> {
} _MessageOutPokerRsp_default_instance_;
class MessageDataPokerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageDataPoker> {
} _MessageDataPoker_default_instance_;

namespace protobuf_cmd_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, messageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, messagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, messagedata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainProto, servertime_),
  2,
  3,
  0,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleReq, peopleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleReq, ischina_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleRsp, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessagePeopleRsp, age_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageLoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageLoginRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageLoginRsp, playerid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStartGameReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStartGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStartGameRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageStartGameRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealRsp, upnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealRsp, downnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDealRsp, pokerlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, playeridx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, statetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, midpoker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, landlordpoker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, selfpoker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, uppokernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, downpokernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageUpdateStateRsp, lavetime_),
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageGradLandlordReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageGradLandlordReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageGradLandlordReq, isgrad_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageGradLandlordRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageGradLandlordRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOutPokerReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOutPokerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOutPokerReq, poker_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOutPokerRsp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageOutPokerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataPoker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataPoker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataPoker, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageDataPoker, number_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(MainProto)},
  { 15, 22, sizeof(MessagePeopleReq)},
  { 24, 32, sizeof(MessagePeopleRsp)},
  { 35, 40, sizeof(MessageLoginReq)},
  { 40, 46, sizeof(MessageLoginRsp)},
  { 47, 52, sizeof(MessageStartGameReq)},
  { 52, 57, sizeof(MessageStartGameRsp)},
  { 57, 62, sizeof(MessageDealReq)},
  { 62, 70, sizeof(MessageDealRsp)},
  { 73, 78, sizeof(MessageUpdateStateReq)},
  { 78, 91, sizeof(MessageUpdateStateRsp)},
  { 99, 105, sizeof(MessageGradLandlordReq)},
  { 106, 111, sizeof(MessageGradLandlordRsp)},
  { 111, 117, sizeof(MessageOutPokerReq)},
  { 118, 123, sizeof(MessageOutPokerRsp)},
  { 123, 130, sizeof(MessageDataPoker)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MainProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessagePeopleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessagePeopleRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageStartGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageStartGameRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageDealReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageDealRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageUpdateStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageUpdateStateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageGradLandlordReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageGradLandlordRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageOutPokerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageOutPokerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageDataPoker_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace

void TableStruct::Shutdown() {
  _MainProto_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MessagePeopleReq_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MessagePeopleRsp_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MessageLoginReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MessageLoginRsp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _MessageStartGameReq_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MessageStartGameRsp_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MessageDealReq_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _MessageDealRsp_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _MessageUpdateStateReq_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _MessageUpdateStateRsp_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _MessageGradLandlordReq_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _MessageGradLandlordRsp_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _MessageOutPokerReq_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _MessageOutPokerRsp_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _MessageDataPoker_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MainProto_default_instance_.DefaultConstruct();
  _MessagePeopleReq_default_instance_.DefaultConstruct();
  _MessagePeopleRsp_default_instance_.DefaultConstruct();
  _MessageLoginReq_default_instance_.DefaultConstruct();
  _MessageLoginRsp_default_instance_.DefaultConstruct();
  _MessageStartGameReq_default_instance_.DefaultConstruct();
  _MessageStartGameRsp_default_instance_.DefaultConstruct();
  _MessageDealReq_default_instance_.DefaultConstruct();
  _MessageDealRsp_default_instance_.DefaultConstruct();
  _MessageUpdateStateReq_default_instance_.DefaultConstruct();
  _MessageUpdateStateRsp_default_instance_.DefaultConstruct();
  _MessageGradLandlordReq_default_instance_.DefaultConstruct();
  _MessageGradLandlordRsp_default_instance_.DefaultConstruct();
  _MessageOutPokerReq_default_instance_.DefaultConstruct();
  _MessageOutPokerRsp_default_instance_.DefaultConstruct();
  _MessageDataPoker_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tcmd.proto\"n\n\tMainProto\022\020\n\010playerID\030\001 \002"
      "(\005\022\021\n\tmessageID\030\002 \002(\005\022\023\n\013messageName\030\003 \001"
      "(\t\022\023\n\013messageData\030\004 \001(\t\022\022\n\nserverTime\030\005 "
      "\001(\001\"5\n\020MessagePeopleReq\022\020\n\010peopleID\030\001 \001("
      "\005\022\017\n\007isChina\030\002 \001(\010\"<\n\020MessagePeopleRsp\022\014"
      "\n\004name\030\001 \001(\t\022\r\n\005phone\030\002 \001(\t\022\013\n\003age\030\003 \001(\005"
      "\"\021\n\017MessageLoginReq\"#\n\017MessageLoginRsp\022\020"
      "\n\010playerID\030\001 \001(\005\"\025\n\023MessageStartGameReq\""
      "\025\n\023MessageStartGameRsp\"\020\n\016MessageDealReq"
      "\"V\n\016MessageDealRsp\022\r\n\005upNum\030\001 \001(\005\022\017\n\007dow"
      "nNum\030\002 \001(\005\022$\n\tpokerList\030\003 \003(\0132\021.MessageD"
      "ataPoker\"\027\n\025MessageUpdateStateReq\"\356\001\n\025Me"
      "ssageUpdateStateRsp\022\021\n\tplayerIdx\030\001 \001(\005\022\021"
      "\n\tstateType\030\002 \001(\005\022#\n\010midPoker\030\003 \003(\0132\021.Me"
      "ssageDataPoker\022(\n\rlandlordPoker\030\004 \003(\0132\021."
      "MessageDataPoker\022$\n\tselfPoker\030\005 \003(\0132\021.Me"
      "ssageDataPoker\022\022\n\nupPokerNum\030\006 \001(\005\022\024\n\014do"
      "wnPokerNum\030\007 \001(\005\022\020\n\010laveTime\030\010 \001(\005\"(\n\026Me"
      "ssageGradLandlordReq\022\016\n\006isGrad\030\001 \001(\010\"\030\n\026"
      "MessageGradLandlordRsp\"6\n\022MessageOutPoke"
      "rReq\022 \n\005poker\030\001 \003(\0132\021.MessageDataPoker\"\024"
      "\n\022MessageOutPokerRsp\"1\n\020MessageDataPoker"
      "\022\r\n\005color\030\001 \001(\005\022\016\n\006number\030\002 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 911);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainProto::kPlayerIDFieldNumber;
const int MainProto::kMessageIDFieldNumber;
const int MainProto::kMessageNameFieldNumber;
const int MainProto::kMessageDataFieldNumber;
const int MainProto::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainProto::MainProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MainProto)
}
MainProto::MainProto(const MainProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  messagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagename()) {
    messagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagename_);
  }
  messagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_messagedata()) {
    messagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagedata_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    reinterpret_cast<char*>(&servertime_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(servertime_));
  // @@protoc_insertion_point(copy_constructor:MainProto)
}

void MainProto::SharedCtor() {
  _cached_size_ = 0;
  messagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, reinterpret_cast<char*>(&servertime_) -
    reinterpret_cast<char*>(&playerid_) + sizeof(servertime_));
}

MainProto::~MainProto() {
  // @@protoc_insertion_point(destructor:MainProto)
  SharedDtor();
}

void MainProto::SharedDtor() {
  messagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  messagedata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MainProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainProto::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainProto& MainProto::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MainProto* MainProto::New(::google::protobuf::Arena* arena) const {
  MainProto* n = new MainProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MainProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_messagename()) {
      GOOGLE_DCHECK(!messagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*messagename_.UnsafeRawStringPointer())->clear();
    }
    if (has_messagedata()) {
      GOOGLE_DCHECK(!messagedata_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*messagedata_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&playerid_, 0, reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&playerid_) + sizeof(servertime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MainProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 playerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 messageID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_messageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string messageName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagename().data(), this->messagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MainProto.messageName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string messageData = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_messagedata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->messagedata().data(), this->messagedata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MainProto.messageData");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double serverTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u)) {
          set_has_servertime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MainProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MainProto)
  return false;
#undef DO_
}

void MainProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MainProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 playerID = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  // required int32 messageID = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->messageid(), output);
  }

  // optional string messageName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagename().data(), this->messagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MainProto.messageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->messagename(), output);
  }

  // optional string messageData = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagedata().data(), this->messagedata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MainProto.messageData");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->messagedata(), output);
  }

  // optional double serverTime = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->servertime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MainProto)
}

::google::protobuf::uint8* MainProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MainProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 playerID = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  // required int32 messageID = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->messageid(), target);
  }

  // optional string messageName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagename().data(), this->messagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MainProto.messageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->messagename(), target);
  }

  // optional string messageData = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->messagedata().data(), this->messagedata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MainProto.messageData");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->messagedata(), target);
  }

  // optional double serverTime = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->servertime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MainProto)
  return target;
}

size_t MainProto::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MainProto)
  size_t total_size = 0;

  if (has_playerid()) {
    // required int32 playerID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  if (has_messageid()) {
    // required int32 messageID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messageid());
  }

  return total_size;
}
size_t MainProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MainProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required int32 playerID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());

    // required int32 messageID = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messageid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string messageName = 3;
    if (has_messagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagename());
    }

    // optional string messageData = 4;
    if (has_messagedata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->messagedata());
    }

  }
  // optional double serverTime = 5;
  if (has_servertime()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MainProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainProto)
    MergeFrom(*source);
  }
}

void MainProto::MergeFrom(const MainProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_messagename();
      messagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_messagedata();
      messagedata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.messagedata_);
    }
    if (cached_has_bits & 0x00000004u) {
      playerid_ = from.playerid_;
    }
    if (cached_has_bits & 0x00000008u) {
      messageid_ = from.messageid_;
    }
    if (cached_has_bits & 0x00000010u) {
      servertime_ = from.servertime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MainProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainProto::CopyFrom(const MainProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void MainProto::Swap(MainProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainProto::InternalSwap(MainProto* other) {
  messagename_.Swap(&other->messagename_);
  messagedata_.Swap(&other->messagedata_);
  std::swap(playerid_, other->playerid_);
  std::swap(messageid_, other->messageid_);
  std::swap(servertime_, other->servertime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainProto::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MainProto

// required int32 playerID = 1;
bool MainProto::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MainProto::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
void MainProto::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
void MainProto::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
::google::protobuf::int32 MainProto::playerid() const {
  // @@protoc_insertion_point(field_get:MainProto.playerID)
  return playerid_;
}
void MainProto::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MainProto.playerID)
}

// required int32 messageID = 2;
bool MainProto::has_messageid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MainProto::set_has_messageid() {
  _has_bits_[0] |= 0x00000008u;
}
void MainProto::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000008u;
}
void MainProto::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
::google::protobuf::int32 MainProto::messageid() const {
  // @@protoc_insertion_point(field_get:MainProto.messageID)
  return messageid_;
}
void MainProto::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:MainProto.messageID)
}

// optional string messageName = 3;
bool MainProto::has_messagename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MainProto::set_has_messagename() {
  _has_bits_[0] |= 0x00000001u;
}
void MainProto::clear_has_messagename() {
  _has_bits_[0] &= ~0x00000001u;
}
void MainProto::clear_messagename() {
  messagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_messagename();
}
const ::std::string& MainProto::messagename() const {
  // @@protoc_insertion_point(field_get:MainProto.messageName)
  return messagename_.GetNoArena();
}
void MainProto::set_messagename(const ::std::string& value) {
  set_has_messagename();
  messagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MainProto.messageName)
}
#if LANG_CXX11
void MainProto::set_messagename(::std::string&& value) {
  set_has_messagename();
  messagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MainProto.messageName)
}
#endif
void MainProto::set_messagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_messagename();
  messagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MainProto.messageName)
}
void MainProto::set_messagename(const char* value, size_t size) {
  set_has_messagename();
  messagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MainProto.messageName)
}
::std::string* MainProto::mutable_messagename() {
  set_has_messagename();
  // @@protoc_insertion_point(field_mutable:MainProto.messageName)
  return messagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MainProto::release_messagename() {
  // @@protoc_insertion_point(field_release:MainProto.messageName)
  clear_has_messagename();
  return messagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MainProto::set_allocated_messagename(::std::string* messagename) {
  if (messagename != NULL) {
    set_has_messagename();
  } else {
    clear_has_messagename();
  }
  messagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagename);
  // @@protoc_insertion_point(field_set_allocated:MainProto.messageName)
}

// optional string messageData = 4;
bool MainProto::has_messagedata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MainProto::set_has_messagedata() {
  _has_bits_[0] |= 0x00000002u;
}
void MainProto::clear_has_messagedata() {
  _has_bits_[0] &= ~0x00000002u;
}
void MainProto::clear_messagedata() {
  messagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_messagedata();
}
const ::std::string& MainProto::messagedata() const {
  // @@protoc_insertion_point(field_get:MainProto.messageData)
  return messagedata_.GetNoArena();
}
void MainProto::set_messagedata(const ::std::string& value) {
  set_has_messagedata();
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MainProto.messageData)
}
#if LANG_CXX11
void MainProto::set_messagedata(::std::string&& value) {
  set_has_messagedata();
  messagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MainProto.messageData)
}
#endif
void MainProto::set_messagedata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_messagedata();
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MainProto.messageData)
}
void MainProto::set_messagedata(const char* value, size_t size) {
  set_has_messagedata();
  messagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MainProto.messageData)
}
::std::string* MainProto::mutable_messagedata() {
  set_has_messagedata();
  // @@protoc_insertion_point(field_mutable:MainProto.messageData)
  return messagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MainProto::release_messagedata() {
  // @@protoc_insertion_point(field_release:MainProto.messageData)
  clear_has_messagedata();
  return messagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MainProto::set_allocated_messagedata(::std::string* messagedata) {
  if (messagedata != NULL) {
    set_has_messagedata();
  } else {
    clear_has_messagedata();
  }
  messagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messagedata);
  // @@protoc_insertion_point(field_set_allocated:MainProto.messageData)
}

// optional double serverTime = 5;
bool MainProto::has_servertime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MainProto::set_has_servertime() {
  _has_bits_[0] |= 0x00000010u;
}
void MainProto::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000010u;
}
void MainProto::clear_servertime() {
  servertime_ = 0;
  clear_has_servertime();
}
double MainProto::servertime() const {
  // @@protoc_insertion_point(field_get:MainProto.serverTime)
  return servertime_;
}
void MainProto::set_servertime(double value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:MainProto.serverTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePeopleReq::kPeopleIDFieldNumber;
const int MessagePeopleReq::kIsChinaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePeopleReq::MessagePeopleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessagePeopleReq)
}
MessagePeopleReq::MessagePeopleReq(const MessagePeopleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peopleid_, &from.peopleid_,
    reinterpret_cast<char*>(&ischina_) -
    reinterpret_cast<char*>(&peopleid_) + sizeof(ischina_));
  // @@protoc_insertion_point(copy_constructor:MessagePeopleReq)
}

void MessagePeopleReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&peopleid_, 0, reinterpret_cast<char*>(&ischina_) -
    reinterpret_cast<char*>(&peopleid_) + sizeof(ischina_));
}

MessagePeopleReq::~MessagePeopleReq() {
  // @@protoc_insertion_point(destructor:MessagePeopleReq)
  SharedDtor();
}

void MessagePeopleReq::SharedDtor() {
}

void MessagePeopleReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessagePeopleReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessagePeopleReq& MessagePeopleReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessagePeopleReq* MessagePeopleReq::New(::google::protobuf::Arena* arena) const {
  MessagePeopleReq* n = new MessagePeopleReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessagePeopleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessagePeopleReq)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&peopleid_, 0, reinterpret_cast<char*>(&ischina_) -
      reinterpret_cast<char*>(&peopleid_) + sizeof(ischina_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessagePeopleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessagePeopleReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 peopleID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_peopleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &peopleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isChina = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_ischina();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ischina_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessagePeopleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessagePeopleReq)
  return false;
#undef DO_
}

void MessagePeopleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessagePeopleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 peopleID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->peopleid(), output);
  }

  // optional bool isChina = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->ischina(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessagePeopleReq)
}

::google::protobuf::uint8* MessagePeopleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessagePeopleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 peopleID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->peopleid(), target);
  }

  // optional bool isChina = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->ischina(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessagePeopleReq)
  return target;
}

size_t MessagePeopleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessagePeopleReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 peopleID = 1;
    if (has_peopleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->peopleid());
    }

    // optional bool isChina = 2;
    if (has_ischina()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagePeopleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessagePeopleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagePeopleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePeopleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessagePeopleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessagePeopleReq)
    MergeFrom(*source);
  }
}

void MessagePeopleReq::MergeFrom(const MessagePeopleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessagePeopleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      peopleid_ = from.peopleid_;
    }
    if (cached_has_bits & 0x00000002u) {
      ischina_ = from.ischina_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessagePeopleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessagePeopleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePeopleReq::CopyFrom(const MessagePeopleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessagePeopleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePeopleReq::IsInitialized() const {
  return true;
}

void MessagePeopleReq::Swap(MessagePeopleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePeopleReq::InternalSwap(MessagePeopleReq* other) {
  std::swap(peopleid_, other->peopleid_);
  std::swap(ischina_, other->ischina_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessagePeopleReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessagePeopleReq

// optional int32 peopleID = 1;
bool MessagePeopleReq::has_peopleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessagePeopleReq::set_has_peopleid() {
  _has_bits_[0] |= 0x00000001u;
}
void MessagePeopleReq::clear_has_peopleid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessagePeopleReq::clear_peopleid() {
  peopleid_ = 0;
  clear_has_peopleid();
}
::google::protobuf::int32 MessagePeopleReq::peopleid() const {
  // @@protoc_insertion_point(field_get:MessagePeopleReq.peopleID)
  return peopleid_;
}
void MessagePeopleReq::set_peopleid(::google::protobuf::int32 value) {
  set_has_peopleid();
  peopleid_ = value;
  // @@protoc_insertion_point(field_set:MessagePeopleReq.peopleID)
}

// optional bool isChina = 2;
bool MessagePeopleReq::has_ischina() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessagePeopleReq::set_has_ischina() {
  _has_bits_[0] |= 0x00000002u;
}
void MessagePeopleReq::clear_has_ischina() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessagePeopleReq::clear_ischina() {
  ischina_ = false;
  clear_has_ischina();
}
bool MessagePeopleReq::ischina() const {
  // @@protoc_insertion_point(field_get:MessagePeopleReq.isChina)
  return ischina_;
}
void MessagePeopleReq::set_ischina(bool value) {
  set_has_ischina();
  ischina_ = value;
  // @@protoc_insertion_point(field_set:MessagePeopleReq.isChina)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessagePeopleRsp::kNameFieldNumber;
const int MessagePeopleRsp::kPhoneFieldNumber;
const int MessagePeopleRsp::kAgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessagePeopleRsp::MessagePeopleRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessagePeopleRsp)
}
MessagePeopleRsp::MessagePeopleRsp(const MessagePeopleRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone()) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  age_ = from.age_;
  // @@protoc_insertion_point(copy_constructor:MessagePeopleRsp)
}

void MessagePeopleRsp::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
}

MessagePeopleRsp::~MessagePeopleRsp() {
  // @@protoc_insertion_point(destructor:MessagePeopleRsp)
  SharedDtor();
}

void MessagePeopleRsp::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessagePeopleRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessagePeopleRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessagePeopleRsp& MessagePeopleRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessagePeopleRsp* MessagePeopleRsp::New(::google::protobuf::Arena* arena) const {
  MessagePeopleRsp* n = new MessagePeopleRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessagePeopleRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessagePeopleRsp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone()) {
      GOOGLE_DCHECK(!phone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_.UnsafeRawStringPointer())->clear();
    }
  }
  age_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessagePeopleRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessagePeopleRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessagePeopleRsp.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MessagePeopleRsp.phone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessagePeopleRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessagePeopleRsp)
  return false;
#undef DO_
}

void MessagePeopleRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessagePeopleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessagePeopleRsp.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string phone = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessagePeopleRsp.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  // optional int32 age = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessagePeopleRsp)
}

::google::protobuf::uint8* MessagePeopleRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessagePeopleRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessagePeopleRsp.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string phone = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MessagePeopleRsp.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  // optional int32 age = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessagePeopleRsp)
  return target;
}

size_t MessagePeopleRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessagePeopleRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string phone = 2;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessagePeopleRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessagePeopleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessagePeopleRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessagePeopleRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessagePeopleRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessagePeopleRsp)
    MergeFrom(*source);
  }
}

void MessagePeopleRsp::MergeFrom(const MessagePeopleRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessagePeopleRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_phone();
      phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
    }
    if (cached_has_bits & 0x00000004u) {
      age_ = from.age_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessagePeopleRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessagePeopleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessagePeopleRsp::CopyFrom(const MessagePeopleRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessagePeopleRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagePeopleRsp::IsInitialized() const {
  return true;
}

void MessagePeopleRsp::Swap(MessagePeopleRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessagePeopleRsp::InternalSwap(MessagePeopleRsp* other) {
  name_.Swap(&other->name_);
  phone_.Swap(&other->phone_);
  std::swap(age_, other->age_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessagePeopleRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessagePeopleRsp

// optional string name = 1;
bool MessagePeopleRsp::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessagePeopleRsp::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MessagePeopleRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessagePeopleRsp::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MessagePeopleRsp::name() const {
  // @@protoc_insertion_point(field_get:MessagePeopleRsp.name)
  return name_.GetNoArena();
}
void MessagePeopleRsp::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessagePeopleRsp.name)
}
#if LANG_CXX11
void MessagePeopleRsp::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessagePeopleRsp.name)
}
#endif
void MessagePeopleRsp::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessagePeopleRsp.name)
}
void MessagePeopleRsp::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessagePeopleRsp.name)
}
::std::string* MessagePeopleRsp::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MessagePeopleRsp.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessagePeopleRsp::release_name() {
  // @@protoc_insertion_point(field_release:MessagePeopleRsp.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessagePeopleRsp::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MessagePeopleRsp.name)
}

// optional string phone = 2;
bool MessagePeopleRsp::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessagePeopleRsp::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
void MessagePeopleRsp::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessagePeopleRsp::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
const ::std::string& MessagePeopleRsp::phone() const {
  // @@protoc_insertion_point(field_get:MessagePeopleRsp.phone)
  return phone_.GetNoArena();
}
void MessagePeopleRsp::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MessagePeopleRsp.phone)
}
#if LANG_CXX11
void MessagePeopleRsp::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MessagePeopleRsp.phone)
}
#endif
void MessagePeopleRsp::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MessagePeopleRsp.phone)
}
void MessagePeopleRsp::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MessagePeopleRsp.phone)
}
::std::string* MessagePeopleRsp::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:MessagePeopleRsp.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessagePeopleRsp::release_phone() {
  // @@protoc_insertion_point(field_release:MessagePeopleRsp.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessagePeopleRsp::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:MessagePeopleRsp.phone)
}

// optional int32 age = 3;
bool MessagePeopleRsp::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MessagePeopleRsp::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
void MessagePeopleRsp::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
void MessagePeopleRsp::clear_age() {
  age_ = 0;
  clear_has_age();
}
::google::protobuf::int32 MessagePeopleRsp::age() const {
  // @@protoc_insertion_point(field_get:MessagePeopleRsp.age)
  return age_;
}
void MessagePeopleRsp::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:MessagePeopleRsp.age)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageLoginReq::MessageLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageLoginReq)
}
MessageLoginReq::MessageLoginReq(const MessageLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageLoginReq)
}

void MessageLoginReq::SharedCtor() {
  _cached_size_ = 0;
}

MessageLoginReq::~MessageLoginReq() {
  // @@protoc_insertion_point(destructor:MessageLoginReq)
  SharedDtor();
}

void MessageLoginReq::SharedDtor() {
}

void MessageLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageLoginReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageLoginReq& MessageLoginReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageLoginReq* MessageLoginReq::New(::google::protobuf::Arena* arena) const {
  MessageLoginReq* n = new MessageLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageLoginReq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageLoginReq)
  return false;
#undef DO_
}

void MessageLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageLoginReq)
}

::google::protobuf::uint8* MessageLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageLoginReq)
  return target;
}

size_t MessageLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageLoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageLoginReq)
    MergeFrom(*source);
  }
}

void MessageLoginReq::MergeFrom(const MessageLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageLoginReq::CopyFrom(const MessageLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageLoginReq::IsInitialized() const {
  return true;
}

void MessageLoginReq::Swap(MessageLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageLoginReq::InternalSwap(MessageLoginReq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageLoginReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageLoginReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageLoginRsp::kPlayerIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageLoginRsp::MessageLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageLoginRsp)
}
MessageLoginRsp::MessageLoginRsp(const MessageLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:MessageLoginRsp)
}

void MessageLoginRsp::SharedCtor() {
  _cached_size_ = 0;
  playerid_ = 0;
}

MessageLoginRsp::~MessageLoginRsp() {
  // @@protoc_insertion_point(destructor:MessageLoginRsp)
  SharedDtor();
}

void MessageLoginRsp::SharedDtor() {
}

void MessageLoginRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageLoginRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageLoginRsp& MessageLoginRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageLoginRsp* MessageLoginRsp::New(::google::protobuf::Arena* arena) const {
  MessageLoginRsp* n = new MessageLoginRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageLoginRsp)
  playerid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageLoginRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 playerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_playerid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageLoginRsp)
  return false;
#undef DO_
}

void MessageLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 playerID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageLoginRsp)
}

::google::protobuf::uint8* MessageLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 playerID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageLoginRsp)
  return target;
}

size_t MessageLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageLoginRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 playerID = 1;
  if (has_playerid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageLoginRsp)
    MergeFrom(*source);
  }
}

void MessageLoginRsp::MergeFrom(const MessageLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerid()) {
    set_playerid(from.playerid());
  }
}

void MessageLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageLoginRsp::CopyFrom(const MessageLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageLoginRsp::IsInitialized() const {
  return true;
}

void MessageLoginRsp::Swap(MessageLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageLoginRsp::InternalSwap(MessageLoginRsp* other) {
  std::swap(playerid_, other->playerid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageLoginRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageLoginRsp

// optional int32 playerID = 1;
bool MessageLoginRsp::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageLoginRsp::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageLoginRsp::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageLoginRsp::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
::google::protobuf::int32 MessageLoginRsp::playerid() const {
  // @@protoc_insertion_point(field_get:MessageLoginRsp.playerID)
  return playerid_;
}
void MessageLoginRsp::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MessageLoginRsp.playerID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageStartGameReq::MessageStartGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageStartGameReq)
}
MessageStartGameReq::MessageStartGameReq(const MessageStartGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStartGameReq)
}

void MessageStartGameReq::SharedCtor() {
  _cached_size_ = 0;
}

MessageStartGameReq::~MessageStartGameReq() {
  // @@protoc_insertion_point(destructor:MessageStartGameReq)
  SharedDtor();
}

void MessageStartGameReq::SharedDtor() {
}

void MessageStartGameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageStartGameReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageStartGameReq& MessageStartGameReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageStartGameReq* MessageStartGameReq::New(::google::protobuf::Arena* arena) const {
  MessageStartGameReq* n = new MessageStartGameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageStartGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStartGameReq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageStartGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageStartGameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageStartGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageStartGameReq)
  return false;
#undef DO_
}

void MessageStartGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageStartGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageStartGameReq)
}

::google::protobuf::uint8* MessageStartGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStartGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStartGameReq)
  return target;
}

size_t MessageStartGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStartGameReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageStartGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageStartGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageStartGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageStartGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageStartGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageStartGameReq)
    MergeFrom(*source);
  }
}

void MessageStartGameReq::MergeFrom(const MessageStartGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageStartGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageStartGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageStartGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageStartGameReq::CopyFrom(const MessageStartGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStartGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStartGameReq::IsInitialized() const {
  return true;
}

void MessageStartGameReq::Swap(MessageStartGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageStartGameReq::InternalSwap(MessageStartGameReq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageStartGameReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageStartGameReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageStartGameRsp::MessageStartGameRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageStartGameRsp)
}
MessageStartGameRsp::MessageStartGameRsp(const MessageStartGameRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageStartGameRsp)
}

void MessageStartGameRsp::SharedCtor() {
  _cached_size_ = 0;
}

MessageStartGameRsp::~MessageStartGameRsp() {
  // @@protoc_insertion_point(destructor:MessageStartGameRsp)
  SharedDtor();
}

void MessageStartGameRsp::SharedDtor() {
}

void MessageStartGameRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageStartGameRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageStartGameRsp& MessageStartGameRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageStartGameRsp* MessageStartGameRsp::New(::google::protobuf::Arena* arena) const {
  MessageStartGameRsp* n = new MessageStartGameRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageStartGameRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageStartGameRsp)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageStartGameRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageStartGameRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageStartGameRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageStartGameRsp)
  return false;
#undef DO_
}

void MessageStartGameRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageStartGameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageStartGameRsp)
}

::google::protobuf::uint8* MessageStartGameRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageStartGameRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageStartGameRsp)
  return target;
}

size_t MessageStartGameRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageStartGameRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageStartGameRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageStartGameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageStartGameRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageStartGameRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageStartGameRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageStartGameRsp)
    MergeFrom(*source);
  }
}

void MessageStartGameRsp::MergeFrom(const MessageStartGameRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageStartGameRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageStartGameRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageStartGameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageStartGameRsp::CopyFrom(const MessageStartGameRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageStartGameRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageStartGameRsp::IsInitialized() const {
  return true;
}

void MessageStartGameRsp::Swap(MessageStartGameRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageStartGameRsp::InternalSwap(MessageStartGameRsp* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageStartGameRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageStartGameRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDealReq::MessageDealReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageDealReq)
}
MessageDealReq::MessageDealReq(const MessageDealReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageDealReq)
}

void MessageDealReq::SharedCtor() {
  _cached_size_ = 0;
}

MessageDealReq::~MessageDealReq() {
  // @@protoc_insertion_point(destructor:MessageDealReq)
  SharedDtor();
}

void MessageDealReq::SharedDtor() {
}

void MessageDealReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDealReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDealReq& MessageDealReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageDealReq* MessageDealReq::New(::google::protobuf::Arena* arena) const {
  MessageDealReq* n = new MessageDealReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDealReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageDealReq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageDealReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageDealReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageDealReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageDealReq)
  return false;
#undef DO_
}

void MessageDealReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageDealReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageDealReq)
}

::google::protobuf::uint8* MessageDealReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageDealReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageDealReq)
  return target;
}

size_t MessageDealReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageDealReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageDealReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageDealReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageDealReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageDealReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageDealReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageDealReq)
    MergeFrom(*source);
  }
}

void MessageDealReq::MergeFrom(const MessageDealReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageDealReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageDealReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageDealReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageDealReq::CopyFrom(const MessageDealReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageDealReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageDealReq::IsInitialized() const {
  return true;
}

void MessageDealReq::Swap(MessageDealReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDealReq::InternalSwap(MessageDealReq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageDealReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageDealReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDealRsp::kUpNumFieldNumber;
const int MessageDealRsp::kDownNumFieldNumber;
const int MessageDealRsp::kPokerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDealRsp::MessageDealRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageDealRsp)
}
MessageDealRsp::MessageDealRsp(const MessageDealRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pokerlist_(from.pokerlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&upnum_, &from.upnum_,
    reinterpret_cast<char*>(&downnum_) -
    reinterpret_cast<char*>(&upnum_) + sizeof(downnum_));
  // @@protoc_insertion_point(copy_constructor:MessageDealRsp)
}

void MessageDealRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&upnum_, 0, reinterpret_cast<char*>(&downnum_) -
    reinterpret_cast<char*>(&upnum_) + sizeof(downnum_));
}

MessageDealRsp::~MessageDealRsp() {
  // @@protoc_insertion_point(destructor:MessageDealRsp)
  SharedDtor();
}

void MessageDealRsp::SharedDtor() {
}

void MessageDealRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDealRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDealRsp& MessageDealRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageDealRsp* MessageDealRsp::New(::google::protobuf::Arena* arena) const {
  MessageDealRsp* n = new MessageDealRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDealRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageDealRsp)
  pokerlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&upnum_, 0, reinterpret_cast<char*>(&downnum_) -
      reinterpret_cast<char*>(&upnum_) + sizeof(downnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageDealRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageDealRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 upNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_upnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 downNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_downnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &downnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MessageDataPoker pokerList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pokerlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageDealRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageDealRsp)
  return false;
#undef DO_
}

void MessageDealRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageDealRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 upNum = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->upnum(), output);
  }

  // optional int32 downNum = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->downnum(), output);
  }

  // repeated .MessageDataPoker pokerList = 3;
  for (unsigned int i = 0, n = this->pokerlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pokerlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageDealRsp)
}

::google::protobuf::uint8* MessageDealRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageDealRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 upNum = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->upnum(), target);
  }

  // optional int32 downNum = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->downnum(), target);
  }

  // repeated .MessageDataPoker pokerList = 3;
  for (unsigned int i = 0, n = this->pokerlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->pokerlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageDealRsp)
  return target;
}

size_t MessageDealRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageDealRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MessageDataPoker pokerList = 3;
  {
    unsigned int count = this->pokerlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pokerlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 upNum = 1;
    if (has_upnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upnum());
    }

    // optional int32 downNum = 2;
    if (has_downnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->downnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageDealRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageDealRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageDealRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageDealRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageDealRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageDealRsp)
    MergeFrom(*source);
  }
}

void MessageDealRsp::MergeFrom(const MessageDealRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageDealRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pokerlist_.MergeFrom(from.pokerlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      upnum_ = from.upnum_;
    }
    if (cached_has_bits & 0x00000002u) {
      downnum_ = from.downnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageDealRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageDealRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageDealRsp::CopyFrom(const MessageDealRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageDealRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageDealRsp::IsInitialized() const {
  return true;
}

void MessageDealRsp::Swap(MessageDealRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDealRsp::InternalSwap(MessageDealRsp* other) {
  pokerlist_.InternalSwap(&other->pokerlist_);
  std::swap(upnum_, other->upnum_);
  std::swap(downnum_, other->downnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageDealRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageDealRsp

// optional int32 upNum = 1;
bool MessageDealRsp::has_upnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageDealRsp::set_has_upnum() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageDealRsp::clear_has_upnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageDealRsp::clear_upnum() {
  upnum_ = 0;
  clear_has_upnum();
}
::google::protobuf::int32 MessageDealRsp::upnum() const {
  // @@protoc_insertion_point(field_get:MessageDealRsp.upNum)
  return upnum_;
}
void MessageDealRsp::set_upnum(::google::protobuf::int32 value) {
  set_has_upnum();
  upnum_ = value;
  // @@protoc_insertion_point(field_set:MessageDealRsp.upNum)
}

// optional int32 downNum = 2;
bool MessageDealRsp::has_downnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageDealRsp::set_has_downnum() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageDealRsp::clear_has_downnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageDealRsp::clear_downnum() {
  downnum_ = 0;
  clear_has_downnum();
}
::google::protobuf::int32 MessageDealRsp::downnum() const {
  // @@protoc_insertion_point(field_get:MessageDealRsp.downNum)
  return downnum_;
}
void MessageDealRsp::set_downnum(::google::protobuf::int32 value) {
  set_has_downnum();
  downnum_ = value;
  // @@protoc_insertion_point(field_set:MessageDealRsp.downNum)
}

// repeated .MessageDataPoker pokerList = 3;
int MessageDealRsp::pokerlist_size() const {
  return pokerlist_.size();
}
void MessageDealRsp::clear_pokerlist() {
  pokerlist_.Clear();
}
const ::MessageDataPoker& MessageDealRsp::pokerlist(int index) const {
  // @@protoc_insertion_point(field_get:MessageDealRsp.pokerList)
  return pokerlist_.Get(index);
}
::MessageDataPoker* MessageDealRsp::mutable_pokerlist(int index) {
  // @@protoc_insertion_point(field_mutable:MessageDealRsp.pokerList)
  return pokerlist_.Mutable(index);
}
::MessageDataPoker* MessageDealRsp::add_pokerlist() {
  // @@protoc_insertion_point(field_add:MessageDealRsp.pokerList)
  return pokerlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageDealRsp::mutable_pokerlist() {
  // @@protoc_insertion_point(field_mutable_list:MessageDealRsp.pokerList)
  return &pokerlist_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageDealRsp::pokerlist() const {
  // @@protoc_insertion_point(field_list:MessageDealRsp.pokerList)
  return pokerlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageUpdateStateReq::MessageUpdateStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageUpdateStateReq)
}
MessageUpdateStateReq::MessageUpdateStateReq(const MessageUpdateStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageUpdateStateReq)
}

void MessageUpdateStateReq::SharedCtor() {
  _cached_size_ = 0;
}

MessageUpdateStateReq::~MessageUpdateStateReq() {
  // @@protoc_insertion_point(destructor:MessageUpdateStateReq)
  SharedDtor();
}

void MessageUpdateStateReq::SharedDtor() {
}

void MessageUpdateStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageUpdateStateReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageUpdateStateReq& MessageUpdateStateReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageUpdateStateReq* MessageUpdateStateReq::New(::google::protobuf::Arena* arena) const {
  MessageUpdateStateReq* n = new MessageUpdateStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageUpdateStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageUpdateStateReq)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageUpdateStateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageUpdateStateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageUpdateStateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageUpdateStateReq)
  return false;
#undef DO_
}

void MessageUpdateStateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageUpdateStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageUpdateStateReq)
}

::google::protobuf::uint8* MessageUpdateStateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageUpdateStateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageUpdateStateReq)
  return target;
}

size_t MessageUpdateStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageUpdateStateReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageUpdateStateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageUpdateStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageUpdateStateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageUpdateStateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageUpdateStateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageUpdateStateReq)
    MergeFrom(*source);
  }
}

void MessageUpdateStateReq::MergeFrom(const MessageUpdateStateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageUpdateStateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageUpdateStateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageUpdateStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageUpdateStateReq::CopyFrom(const MessageUpdateStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageUpdateStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageUpdateStateReq::IsInitialized() const {
  return true;
}

void MessageUpdateStateReq::Swap(MessageUpdateStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageUpdateStateReq::InternalSwap(MessageUpdateStateReq* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageUpdateStateReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageUpdateStateReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageUpdateStateRsp::kPlayerIdxFieldNumber;
const int MessageUpdateStateRsp::kStateTypeFieldNumber;
const int MessageUpdateStateRsp::kMidPokerFieldNumber;
const int MessageUpdateStateRsp::kLandlordPokerFieldNumber;
const int MessageUpdateStateRsp::kSelfPokerFieldNumber;
const int MessageUpdateStateRsp::kUpPokerNumFieldNumber;
const int MessageUpdateStateRsp::kDownPokerNumFieldNumber;
const int MessageUpdateStateRsp::kLaveTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageUpdateStateRsp::MessageUpdateStateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageUpdateStateRsp)
}
MessageUpdateStateRsp::MessageUpdateStateRsp(const MessageUpdateStateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      midpoker_(from.midpoker_),
      landlordpoker_(from.landlordpoker_),
      selfpoker_(from.selfpoker_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playeridx_, &from.playeridx_,
    reinterpret_cast<char*>(&lavetime_) -
    reinterpret_cast<char*>(&playeridx_) + sizeof(lavetime_));
  // @@protoc_insertion_point(copy_constructor:MessageUpdateStateRsp)
}

void MessageUpdateStateRsp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&playeridx_, 0, reinterpret_cast<char*>(&lavetime_) -
    reinterpret_cast<char*>(&playeridx_) + sizeof(lavetime_));
}

MessageUpdateStateRsp::~MessageUpdateStateRsp() {
  // @@protoc_insertion_point(destructor:MessageUpdateStateRsp)
  SharedDtor();
}

void MessageUpdateStateRsp::SharedDtor() {
}

void MessageUpdateStateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageUpdateStateRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageUpdateStateRsp& MessageUpdateStateRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageUpdateStateRsp* MessageUpdateStateRsp::New(::google::protobuf::Arena* arena) const {
  MessageUpdateStateRsp* n = new MessageUpdateStateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageUpdateStateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageUpdateStateRsp)
  midpoker_.Clear();
  landlordpoker_.Clear();
  selfpoker_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&playeridx_, 0, reinterpret_cast<char*>(&lavetime_) -
      reinterpret_cast<char*>(&playeridx_) + sizeof(lavetime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageUpdateStateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageUpdateStateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 playerIdx = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_playeridx();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &playeridx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stateType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_statetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MessageDataPoker midPoker = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_midpoker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MessageDataPoker landlordPoker = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_landlordpoker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MessageDataPoker selfPoker = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_selfpoker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 upPokerNum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_uppokernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uppokernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 downPokerNum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_downpokernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &downpokernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 laveTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_lavetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lavetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageUpdateStateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageUpdateStateRsp)
  return false;
#undef DO_
}

void MessageUpdateStateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageUpdateStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 playerIdx = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->playeridx(), output);
  }

  // optional int32 stateType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->statetype(), output);
  }

  // repeated .MessageDataPoker midPoker = 3;
  for (unsigned int i = 0, n = this->midpoker_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->midpoker(i), output);
  }

  // repeated .MessageDataPoker landlordPoker = 4;
  for (unsigned int i = 0, n = this->landlordpoker_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->landlordpoker(i), output);
  }

  // repeated .MessageDataPoker selfPoker = 5;
  for (unsigned int i = 0, n = this->selfpoker_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->selfpoker(i), output);
  }

  // optional int32 upPokerNum = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->uppokernum(), output);
  }

  // optional int32 downPokerNum = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->downpokernum(), output);
  }

  // optional int32 laveTime = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->lavetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageUpdateStateRsp)
}

::google::protobuf::uint8* MessageUpdateStateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageUpdateStateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 playerIdx = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->playeridx(), target);
  }

  // optional int32 stateType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->statetype(), target);
  }

  // repeated .MessageDataPoker midPoker = 3;
  for (unsigned int i = 0, n = this->midpoker_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->midpoker(i), deterministic, target);
  }

  // repeated .MessageDataPoker landlordPoker = 4;
  for (unsigned int i = 0, n = this->landlordpoker_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->landlordpoker(i), deterministic, target);
  }

  // repeated .MessageDataPoker selfPoker = 5;
  for (unsigned int i = 0, n = this->selfpoker_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->selfpoker(i), deterministic, target);
  }

  // optional int32 upPokerNum = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->uppokernum(), target);
  }

  // optional int32 downPokerNum = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->downpokernum(), target);
  }

  // optional int32 laveTime = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->lavetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageUpdateStateRsp)
  return target;
}

size_t MessageUpdateStateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageUpdateStateRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MessageDataPoker midPoker = 3;
  {
    unsigned int count = this->midpoker_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->midpoker(i));
    }
  }

  // repeated .MessageDataPoker landlordPoker = 4;
  {
    unsigned int count = this->landlordpoker_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->landlordpoker(i));
    }
  }

  // repeated .MessageDataPoker selfPoker = 5;
  {
    unsigned int count = this->selfpoker_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->selfpoker(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 playerIdx = 1;
    if (has_playeridx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->playeridx());
    }

    // optional int32 stateType = 2;
    if (has_statetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statetype());
    }

    // optional int32 upPokerNum = 6;
    if (has_uppokernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uppokernum());
    }

    // optional int32 downPokerNum = 7;
    if (has_downpokernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->downpokernum());
    }

    // optional int32 laveTime = 8;
    if (has_lavetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lavetime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageUpdateStateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageUpdateStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageUpdateStateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageUpdateStateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageUpdateStateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageUpdateStateRsp)
    MergeFrom(*source);
  }
}

void MessageUpdateStateRsp::MergeFrom(const MessageUpdateStateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageUpdateStateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  midpoker_.MergeFrom(from.midpoker_);
  landlordpoker_.MergeFrom(from.landlordpoker_);
  selfpoker_.MergeFrom(from.selfpoker_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      playeridx_ = from.playeridx_;
    }
    if (cached_has_bits & 0x00000002u) {
      statetype_ = from.statetype_;
    }
    if (cached_has_bits & 0x00000004u) {
      uppokernum_ = from.uppokernum_;
    }
    if (cached_has_bits & 0x00000008u) {
      downpokernum_ = from.downpokernum_;
    }
    if (cached_has_bits & 0x00000010u) {
      lavetime_ = from.lavetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageUpdateStateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageUpdateStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageUpdateStateRsp::CopyFrom(const MessageUpdateStateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageUpdateStateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageUpdateStateRsp::IsInitialized() const {
  return true;
}

void MessageUpdateStateRsp::Swap(MessageUpdateStateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageUpdateStateRsp::InternalSwap(MessageUpdateStateRsp* other) {
  midpoker_.InternalSwap(&other->midpoker_);
  landlordpoker_.InternalSwap(&other->landlordpoker_);
  selfpoker_.InternalSwap(&other->selfpoker_);
  std::swap(playeridx_, other->playeridx_);
  std::swap(statetype_, other->statetype_);
  std::swap(uppokernum_, other->uppokernum_);
  std::swap(downpokernum_, other->downpokernum_);
  std::swap(lavetime_, other->lavetime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageUpdateStateRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageUpdateStateRsp

// optional int32 playerIdx = 1;
bool MessageUpdateStateRsp::has_playeridx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageUpdateStateRsp::set_has_playeridx() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageUpdateStateRsp::clear_has_playeridx() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageUpdateStateRsp::clear_playeridx() {
  playeridx_ = 0;
  clear_has_playeridx();
}
::google::protobuf::int32 MessageUpdateStateRsp::playeridx() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.playerIdx)
  return playeridx_;
}
void MessageUpdateStateRsp::set_playeridx(::google::protobuf::int32 value) {
  set_has_playeridx();
  playeridx_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.playerIdx)
}

// optional int32 stateType = 2;
bool MessageUpdateStateRsp::has_statetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageUpdateStateRsp::set_has_statetype() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageUpdateStateRsp::clear_has_statetype() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageUpdateStateRsp::clear_statetype() {
  statetype_ = 0;
  clear_has_statetype();
}
::google::protobuf::int32 MessageUpdateStateRsp::statetype() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.stateType)
  return statetype_;
}
void MessageUpdateStateRsp::set_statetype(::google::protobuf::int32 value) {
  set_has_statetype();
  statetype_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.stateType)
}

// repeated .MessageDataPoker midPoker = 3;
int MessageUpdateStateRsp::midpoker_size() const {
  return midpoker_.size();
}
void MessageUpdateStateRsp::clear_midpoker() {
  midpoker_.Clear();
}
const ::MessageDataPoker& MessageUpdateStateRsp::midpoker(int index) const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.midPoker)
  return midpoker_.Get(index);
}
::MessageDataPoker* MessageUpdateStateRsp::mutable_midpoker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageUpdateStateRsp.midPoker)
  return midpoker_.Mutable(index);
}
::MessageDataPoker* MessageUpdateStateRsp::add_midpoker() {
  // @@protoc_insertion_point(field_add:MessageUpdateStateRsp.midPoker)
  return midpoker_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageUpdateStateRsp::mutable_midpoker() {
  // @@protoc_insertion_point(field_mutable_list:MessageUpdateStateRsp.midPoker)
  return &midpoker_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageUpdateStateRsp::midpoker() const {
  // @@protoc_insertion_point(field_list:MessageUpdateStateRsp.midPoker)
  return midpoker_;
}

// repeated .MessageDataPoker landlordPoker = 4;
int MessageUpdateStateRsp::landlordpoker_size() const {
  return landlordpoker_.size();
}
void MessageUpdateStateRsp::clear_landlordpoker() {
  landlordpoker_.Clear();
}
const ::MessageDataPoker& MessageUpdateStateRsp::landlordpoker(int index) const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_.Get(index);
}
::MessageDataPoker* MessageUpdateStateRsp::mutable_landlordpoker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_.Mutable(index);
}
::MessageDataPoker* MessageUpdateStateRsp::add_landlordpoker() {
  // @@protoc_insertion_point(field_add:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageUpdateStateRsp::mutable_landlordpoker() {
  // @@protoc_insertion_point(field_mutable_list:MessageUpdateStateRsp.landlordPoker)
  return &landlordpoker_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageUpdateStateRsp::landlordpoker() const {
  // @@protoc_insertion_point(field_list:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_;
}

// repeated .MessageDataPoker selfPoker = 5;
int MessageUpdateStateRsp::selfpoker_size() const {
  return selfpoker_.size();
}
void MessageUpdateStateRsp::clear_selfpoker() {
  selfpoker_.Clear();
}
const ::MessageDataPoker& MessageUpdateStateRsp::selfpoker(int index) const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.selfPoker)
  return selfpoker_.Get(index);
}
::MessageDataPoker* MessageUpdateStateRsp::mutable_selfpoker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageUpdateStateRsp.selfPoker)
  return selfpoker_.Mutable(index);
}
::MessageDataPoker* MessageUpdateStateRsp::add_selfpoker() {
  // @@protoc_insertion_point(field_add:MessageUpdateStateRsp.selfPoker)
  return selfpoker_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageUpdateStateRsp::mutable_selfpoker() {
  // @@protoc_insertion_point(field_mutable_list:MessageUpdateStateRsp.selfPoker)
  return &selfpoker_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageUpdateStateRsp::selfpoker() const {
  // @@protoc_insertion_point(field_list:MessageUpdateStateRsp.selfPoker)
  return selfpoker_;
}

// optional int32 upPokerNum = 6;
bool MessageUpdateStateRsp::has_uppokernum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MessageUpdateStateRsp::set_has_uppokernum() {
  _has_bits_[0] |= 0x00000004u;
}
void MessageUpdateStateRsp::clear_has_uppokernum() {
  _has_bits_[0] &= ~0x00000004u;
}
void MessageUpdateStateRsp::clear_uppokernum() {
  uppokernum_ = 0;
  clear_has_uppokernum();
}
::google::protobuf::int32 MessageUpdateStateRsp::uppokernum() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.upPokerNum)
  return uppokernum_;
}
void MessageUpdateStateRsp::set_uppokernum(::google::protobuf::int32 value) {
  set_has_uppokernum();
  uppokernum_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.upPokerNum)
}

// optional int32 downPokerNum = 7;
bool MessageUpdateStateRsp::has_downpokernum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MessageUpdateStateRsp::set_has_downpokernum() {
  _has_bits_[0] |= 0x00000008u;
}
void MessageUpdateStateRsp::clear_has_downpokernum() {
  _has_bits_[0] &= ~0x00000008u;
}
void MessageUpdateStateRsp::clear_downpokernum() {
  downpokernum_ = 0;
  clear_has_downpokernum();
}
::google::protobuf::int32 MessageUpdateStateRsp::downpokernum() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.downPokerNum)
  return downpokernum_;
}
void MessageUpdateStateRsp::set_downpokernum(::google::protobuf::int32 value) {
  set_has_downpokernum();
  downpokernum_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.downPokerNum)
}

// optional int32 laveTime = 8;
bool MessageUpdateStateRsp::has_lavetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MessageUpdateStateRsp::set_has_lavetime() {
  _has_bits_[0] |= 0x00000010u;
}
void MessageUpdateStateRsp::clear_has_lavetime() {
  _has_bits_[0] &= ~0x00000010u;
}
void MessageUpdateStateRsp::clear_lavetime() {
  lavetime_ = 0;
  clear_has_lavetime();
}
::google::protobuf::int32 MessageUpdateStateRsp::lavetime() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.laveTime)
  return lavetime_;
}
void MessageUpdateStateRsp::set_lavetime(::google::protobuf::int32 value) {
  set_has_lavetime();
  lavetime_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.laveTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageGradLandlordReq::kIsGradFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageGradLandlordReq::MessageGradLandlordReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageGradLandlordReq)
}
MessageGradLandlordReq::MessageGradLandlordReq(const MessageGradLandlordReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  isgrad_ = from.isgrad_;
  // @@protoc_insertion_point(copy_constructor:MessageGradLandlordReq)
}

void MessageGradLandlordReq::SharedCtor() {
  _cached_size_ = 0;
  isgrad_ = false;
}

MessageGradLandlordReq::~MessageGradLandlordReq() {
  // @@protoc_insertion_point(destructor:MessageGradLandlordReq)
  SharedDtor();
}

void MessageGradLandlordReq::SharedDtor() {
}

void MessageGradLandlordReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageGradLandlordReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageGradLandlordReq& MessageGradLandlordReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageGradLandlordReq* MessageGradLandlordReq::New(::google::protobuf::Arena* arena) const {
  MessageGradLandlordReq* n = new MessageGradLandlordReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageGradLandlordReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageGradLandlordReq)
  isgrad_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageGradLandlordReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageGradLandlordReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isGrad = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_isgrad();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isgrad_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageGradLandlordReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageGradLandlordReq)
  return false;
#undef DO_
}

void MessageGradLandlordReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageGradLandlordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool isGrad = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isgrad(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageGradLandlordReq)
}

::google::protobuf::uint8* MessageGradLandlordReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageGradLandlordReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool isGrad = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isgrad(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageGradLandlordReq)
  return target;
}

size_t MessageGradLandlordReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageGradLandlordReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool isGrad = 1;
  if (has_isgrad()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageGradLandlordReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageGradLandlordReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageGradLandlordReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageGradLandlordReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageGradLandlordReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageGradLandlordReq)
    MergeFrom(*source);
  }
}

void MessageGradLandlordReq::MergeFrom(const MessageGradLandlordReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageGradLandlordReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_isgrad()) {
    set_isgrad(from.isgrad());
  }
}

void MessageGradLandlordReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageGradLandlordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageGradLandlordReq::CopyFrom(const MessageGradLandlordReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageGradLandlordReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageGradLandlordReq::IsInitialized() const {
  return true;
}

void MessageGradLandlordReq::Swap(MessageGradLandlordReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageGradLandlordReq::InternalSwap(MessageGradLandlordReq* other) {
  std::swap(isgrad_, other->isgrad_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageGradLandlordReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageGradLandlordReq

// optional bool isGrad = 1;
bool MessageGradLandlordReq::has_isgrad() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageGradLandlordReq::set_has_isgrad() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageGradLandlordReq::clear_has_isgrad() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageGradLandlordReq::clear_isgrad() {
  isgrad_ = false;
  clear_has_isgrad();
}
bool MessageGradLandlordReq::isgrad() const {
  // @@protoc_insertion_point(field_get:MessageGradLandlordReq.isGrad)
  return isgrad_;
}
void MessageGradLandlordReq::set_isgrad(bool value) {
  set_has_isgrad();
  isgrad_ = value;
  // @@protoc_insertion_point(field_set:MessageGradLandlordReq.isGrad)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageGradLandlordRsp::MessageGradLandlordRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageGradLandlordRsp)
}
MessageGradLandlordRsp::MessageGradLandlordRsp(const MessageGradLandlordRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageGradLandlordRsp)
}

void MessageGradLandlordRsp::SharedCtor() {
  _cached_size_ = 0;
}

MessageGradLandlordRsp::~MessageGradLandlordRsp() {
  // @@protoc_insertion_point(destructor:MessageGradLandlordRsp)
  SharedDtor();
}

void MessageGradLandlordRsp::SharedDtor() {
}

void MessageGradLandlordRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageGradLandlordRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageGradLandlordRsp& MessageGradLandlordRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageGradLandlordRsp* MessageGradLandlordRsp::New(::google::protobuf::Arena* arena) const {
  MessageGradLandlordRsp* n = new MessageGradLandlordRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageGradLandlordRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageGradLandlordRsp)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageGradLandlordRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageGradLandlordRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageGradLandlordRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageGradLandlordRsp)
  return false;
#undef DO_
}

void MessageGradLandlordRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageGradLandlordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageGradLandlordRsp)
}

::google::protobuf::uint8* MessageGradLandlordRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageGradLandlordRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageGradLandlordRsp)
  return target;
}

size_t MessageGradLandlordRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageGradLandlordRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageGradLandlordRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageGradLandlordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageGradLandlordRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageGradLandlordRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageGradLandlordRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageGradLandlordRsp)
    MergeFrom(*source);
  }
}

void MessageGradLandlordRsp::MergeFrom(const MessageGradLandlordRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageGradLandlordRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageGradLandlordRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageGradLandlordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageGradLandlordRsp::CopyFrom(const MessageGradLandlordRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageGradLandlordRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageGradLandlordRsp::IsInitialized() const {
  return true;
}

void MessageGradLandlordRsp::Swap(MessageGradLandlordRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageGradLandlordRsp::InternalSwap(MessageGradLandlordRsp* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageGradLandlordRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageGradLandlordRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageOutPokerReq::kPokerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageOutPokerReq::MessageOutPokerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageOutPokerReq)
}
MessageOutPokerReq::MessageOutPokerReq(const MessageOutPokerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      poker_(from.poker_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageOutPokerReq)
}

void MessageOutPokerReq::SharedCtor() {
  _cached_size_ = 0;
}

MessageOutPokerReq::~MessageOutPokerReq() {
  // @@protoc_insertion_point(destructor:MessageOutPokerReq)
  SharedDtor();
}

void MessageOutPokerReq::SharedDtor() {
}

void MessageOutPokerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageOutPokerReq::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageOutPokerReq& MessageOutPokerReq::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageOutPokerReq* MessageOutPokerReq::New(::google::protobuf::Arena* arena) const {
  MessageOutPokerReq* n = new MessageOutPokerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageOutPokerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageOutPokerReq)
  poker_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageOutPokerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageOutPokerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MessageDataPoker poker = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageOutPokerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageOutPokerReq)
  return false;
#undef DO_
}

void MessageOutPokerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageOutPokerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageDataPoker poker = 1;
  for (unsigned int i = 0, n = this->poker_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->poker(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageOutPokerReq)
}

::google::protobuf::uint8* MessageOutPokerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageOutPokerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MessageDataPoker poker = 1;
  for (unsigned int i = 0, n = this->poker_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->poker(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageOutPokerReq)
  return target;
}

size_t MessageOutPokerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageOutPokerReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .MessageDataPoker poker = 1;
  {
    unsigned int count = this->poker_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->poker(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageOutPokerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageOutPokerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageOutPokerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageOutPokerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageOutPokerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageOutPokerReq)
    MergeFrom(*source);
  }
}

void MessageOutPokerReq::MergeFrom(const MessageOutPokerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageOutPokerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  poker_.MergeFrom(from.poker_);
}

void MessageOutPokerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageOutPokerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageOutPokerReq::CopyFrom(const MessageOutPokerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageOutPokerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageOutPokerReq::IsInitialized() const {
  return true;
}

void MessageOutPokerReq::Swap(MessageOutPokerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageOutPokerReq::InternalSwap(MessageOutPokerReq* other) {
  poker_.InternalSwap(&other->poker_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageOutPokerReq::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageOutPokerReq

// repeated .MessageDataPoker poker = 1;
int MessageOutPokerReq::poker_size() const {
  return poker_.size();
}
void MessageOutPokerReq::clear_poker() {
  poker_.Clear();
}
const ::MessageDataPoker& MessageOutPokerReq::poker(int index) const {
  // @@protoc_insertion_point(field_get:MessageOutPokerReq.poker)
  return poker_.Get(index);
}
::MessageDataPoker* MessageOutPokerReq::mutable_poker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageOutPokerReq.poker)
  return poker_.Mutable(index);
}
::MessageDataPoker* MessageOutPokerReq::add_poker() {
  // @@protoc_insertion_point(field_add:MessageOutPokerReq.poker)
  return poker_.Add();
}
::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageOutPokerReq::mutable_poker() {
  // @@protoc_insertion_point(field_mutable_list:MessageOutPokerReq.poker)
  return &poker_;
}
const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageOutPokerReq::poker() const {
  // @@protoc_insertion_point(field_list:MessageOutPokerReq.poker)
  return poker_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageOutPokerRsp::MessageOutPokerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageOutPokerRsp)
}
MessageOutPokerRsp::MessageOutPokerRsp(const MessageOutPokerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MessageOutPokerRsp)
}

void MessageOutPokerRsp::SharedCtor() {
  _cached_size_ = 0;
}

MessageOutPokerRsp::~MessageOutPokerRsp() {
  // @@protoc_insertion_point(destructor:MessageOutPokerRsp)
  SharedDtor();
}

void MessageOutPokerRsp::SharedDtor() {
}

void MessageOutPokerRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageOutPokerRsp::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageOutPokerRsp& MessageOutPokerRsp::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageOutPokerRsp* MessageOutPokerRsp::New(::google::protobuf::Arena* arena) const {
  MessageOutPokerRsp* n = new MessageOutPokerRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageOutPokerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageOutPokerRsp)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageOutPokerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageOutPokerRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:MessageOutPokerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageOutPokerRsp)
  return false;
#undef DO_
}

void MessageOutPokerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageOutPokerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageOutPokerRsp)
}

::google::protobuf::uint8* MessageOutPokerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageOutPokerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageOutPokerRsp)
  return target;
}

size_t MessageOutPokerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageOutPokerRsp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageOutPokerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageOutPokerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageOutPokerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageOutPokerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageOutPokerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageOutPokerRsp)
    MergeFrom(*source);
  }
}

void MessageOutPokerRsp::MergeFrom(const MessageOutPokerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageOutPokerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageOutPokerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageOutPokerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageOutPokerRsp::CopyFrom(const MessageOutPokerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageOutPokerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageOutPokerRsp::IsInitialized() const {
  return true;
}

void MessageOutPokerRsp::Swap(MessageOutPokerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageOutPokerRsp::InternalSwap(MessageOutPokerRsp* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageOutPokerRsp::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageOutPokerRsp

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageDataPoker::kColorFieldNumber;
const int MessageDataPoker::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageDataPoker::MessageDataPoker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageDataPoker)
}
MessageDataPoker::MessageDataPoker(const MessageDataPoker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&color_, &from.color_,
    reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&color_) + sizeof(number_));
  // @@protoc_insertion_point(copy_constructor:MessageDataPoker)
}

void MessageDataPoker::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&color_, 0, reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&color_) + sizeof(number_));
}

MessageDataPoker::~MessageDataPoker() {
  // @@protoc_insertion_point(destructor:MessageDataPoker)
  SharedDtor();
}

void MessageDataPoker::SharedDtor() {
}

void MessageDataPoker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageDataPoker::descriptor() {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageDataPoker& MessageDataPoker::default_instance() {
  protobuf_cmd_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageDataPoker* MessageDataPoker::New(::google::protobuf::Arena* arena) const {
  MessageDataPoker* n = new MessageDataPoker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageDataPoker::Clear() {
// @@protoc_insertion_point(message_clear_start:MessageDataPoker)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&color_, 0, reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&color_) + sizeof(number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageDataPoker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageDataPoker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageDataPoker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageDataPoker)
  return false;
#undef DO_
}

void MessageDataPoker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageDataPoker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 color = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->color(), output);
  }

  // optional int32 number = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageDataPoker)
}

::google::protobuf::uint8* MessageDataPoker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageDataPoker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 color = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->color(), target);
  }

  // optional int32 number = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageDataPoker)
  return target;
}

size_t MessageDataPoker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MessageDataPoker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 color = 1;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }

    // optional int32 number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageDataPoker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MessageDataPoker)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageDataPoker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageDataPoker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MessageDataPoker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MessageDataPoker)
    MergeFrom(*source);
  }
}

void MessageDataPoker::MergeFrom(const MessageDataPoker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MessageDataPoker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000002u) {
      number_ = from.number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageDataPoker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MessageDataPoker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageDataPoker::CopyFrom(const MessageDataPoker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MessageDataPoker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageDataPoker::IsInitialized() const {
  return true;
}

void MessageDataPoker::Swap(MessageDataPoker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageDataPoker::InternalSwap(MessageDataPoker* other) {
  std::swap(color_, other->color_);
  std::swap(number_, other->number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageDataPoker::GetMetadata() const {
  protobuf_cmd_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageDataPoker

// optional int32 color = 1;
bool MessageDataPoker::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageDataPoker::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageDataPoker::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageDataPoker::clear_color() {
  color_ = 0;
  clear_has_color();
}
::google::protobuf::int32 MessageDataPoker::color() const {
  // @@protoc_insertion_point(field_get:MessageDataPoker.color)
  return color_;
}
void MessageDataPoker::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:MessageDataPoker.color)
}

// optional int32 number = 2;
bool MessageDataPoker::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageDataPoker::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageDataPoker::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageDataPoker::clear_number() {
  number_ = 0;
  clear_has_number();
}
::google::protobuf::int32 MessageDataPoker::number() const {
  // @@protoc_insertion_point(field_get:MessageDataPoker.number)
  return number_;
}
void MessageDataPoker::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:MessageDataPoker.number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
