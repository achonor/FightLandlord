// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd.proto

#ifndef PROTOBUF_cmd_2eproto__INCLUDED
#define PROTOBUF_cmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cmd_2eproto();
void protobuf_AssignDesc_cmd_2eproto();
void protobuf_ShutdownFile_cmd_2eproto();

class MainProto;
class MessagePeopleReq;
class MessagePeopleRsp;
class MessageLoginReq;
class MessageLoginRsp;
class MessageStartGameReq;
class MessageStartGameRsp;
class MessageDealReq;
class MessageDealRsp;
class MessageUpdateStateReq;
class MessageUpdateStateRsp;
class MessageGradLandlordReq;
class MessageGradLandlordRsp;
class MessageOutPokerReq;
class MessageOutPokerRsp;
class MessageGameResultReq;
class MessageGameResultRsp;
class MessageDataPoker;

// ===================================================================

class MainProto : public ::google::protobuf::Message {
 public:
  MainProto();
  virtual ~MainProto();

  MainProto(const MainProto& from);

  inline MainProto& operator=(const MainProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MainProto& default_instance();

  void Swap(MainProto* other);

  // implements Message ----------------------------------------------

  MainProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MainProto& from);
  void MergeFrom(const MainProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // required int32 messageID = 2;
  inline bool has_messageid() const;
  inline void clear_messageid();
  static const int kMessageIDFieldNumber = 2;
  inline ::google::protobuf::int32 messageid() const;
  inline void set_messageid(::google::protobuf::int32 value);

  // optional string messageName = 3;
  inline bool has_messagename() const;
  inline void clear_messagename();
  static const int kMessageNameFieldNumber = 3;
  inline const ::std::string& messagename() const;
  inline void set_messagename(const ::std::string& value);
  inline void set_messagename(const char* value);
  inline void set_messagename(const char* value, size_t size);
  inline ::std::string* mutable_messagename();
  inline ::std::string* release_messagename();
  inline void set_allocated_messagename(::std::string* messagename);

  // optional string messageData = 4;
  inline bool has_messagedata() const;
  inline void clear_messagedata();
  static const int kMessageDataFieldNumber = 4;
  inline const ::std::string& messagedata() const;
  inline void set_messagedata(const ::std::string& value);
  inline void set_messagedata(const char* value);
  inline void set_messagedata(const char* value, size_t size);
  inline ::std::string* mutable_messagedata();
  inline ::std::string* release_messagedata();
  inline void set_allocated_messagedata(::std::string* messagedata);

  // optional double serverTime = 5;
  inline bool has_servertime() const;
  inline void clear_servertime();
  static const int kServerTimeFieldNumber = 5;
  inline double servertime() const;
  inline void set_servertime(double value);

  // @@protoc_insertion_point(class_scope:MainProto)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_messageid();
  inline void clear_has_messageid();
  inline void set_has_messagename();
  inline void clear_has_messagename();
  inline void set_has_messagedata();
  inline void clear_has_messagedata();
  inline void set_has_servertime();
  inline void clear_has_servertime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 messageid_;
  ::std::string* messagename_;
  ::std::string* messagedata_;
  double servertime_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MainProto* default_instance_;
};
// -------------------------------------------------------------------

class MessagePeopleReq : public ::google::protobuf::Message {
 public:
  MessagePeopleReq();
  virtual ~MessagePeopleReq();

  MessagePeopleReq(const MessagePeopleReq& from);

  inline MessagePeopleReq& operator=(const MessagePeopleReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessagePeopleReq& default_instance();

  void Swap(MessagePeopleReq* other);

  // implements Message ----------------------------------------------

  MessagePeopleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessagePeopleReq& from);
  void MergeFrom(const MessagePeopleReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 peopleID = 1;
  inline bool has_peopleid() const;
  inline void clear_peopleid();
  static const int kPeopleIDFieldNumber = 1;
  inline ::google::protobuf::int32 peopleid() const;
  inline void set_peopleid(::google::protobuf::int32 value);

  // optional bool isChina = 2;
  inline bool has_ischina() const;
  inline void clear_ischina();
  static const int kIsChinaFieldNumber = 2;
  inline bool ischina() const;
  inline void set_ischina(bool value);

  // @@protoc_insertion_point(class_scope:MessagePeopleReq)
 private:
  inline void set_has_peopleid();
  inline void clear_has_peopleid();
  inline void set_has_ischina();
  inline void clear_has_ischina();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 peopleid_;
  bool ischina_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessagePeopleReq* default_instance_;
};
// -------------------------------------------------------------------

class MessagePeopleRsp : public ::google::protobuf::Message {
 public:
  MessagePeopleRsp();
  virtual ~MessagePeopleRsp();

  MessagePeopleRsp(const MessagePeopleRsp& from);

  inline MessagePeopleRsp& operator=(const MessagePeopleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessagePeopleRsp& default_instance();

  void Swap(MessagePeopleRsp* other);

  // implements Message ----------------------------------------------

  MessagePeopleRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessagePeopleRsp& from);
  void MergeFrom(const MessagePeopleRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string phone = 2;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 2;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional int32 age = 3;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 3;
  inline ::google::protobuf::int32 age() const;
  inline void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessagePeopleRsp)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_age();
  inline void clear_has_age();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* phone_;
  ::google::protobuf::int32 age_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessagePeopleRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageLoginReq : public ::google::protobuf::Message {
 public:
  MessageLoginReq();
  virtual ~MessageLoginReq();

  MessageLoginReq(const MessageLoginReq& from);

  inline MessageLoginReq& operator=(const MessageLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageLoginReq& default_instance();

  void Swap(MessageLoginReq* other);

  // implements Message ----------------------------------------------

  MessageLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageLoginReq& from);
  void MergeFrom(const MessageLoginReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageLoginReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageLoginRsp : public ::google::protobuf::Message {
 public:
  MessageLoginRsp();
  virtual ~MessageLoginRsp();

  MessageLoginRsp(const MessageLoginRsp& from);

  inline MessageLoginRsp& operator=(const MessageLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageLoginRsp& default_instance();

  void Swap(MessageLoginRsp* other);

  // implements Message ----------------------------------------------

  MessageLoginRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageLoginRsp& from);
  void MergeFrom(const MessageLoginRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 playerID = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIDFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageLoginRsp)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 playerid_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageLoginRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageStartGameReq : public ::google::protobuf::Message {
 public:
  MessageStartGameReq();
  virtual ~MessageStartGameReq();

  MessageStartGameReq(const MessageStartGameReq& from);

  inline MessageStartGameReq& operator=(const MessageStartGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageStartGameReq& default_instance();

  void Swap(MessageStartGameReq* other);

  // implements Message ----------------------------------------------

  MessageStartGameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageStartGameReq& from);
  void MergeFrom(const MessageStartGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageStartGameReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageStartGameReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageStartGameRsp : public ::google::protobuf::Message {
 public:
  MessageStartGameRsp();
  virtual ~MessageStartGameRsp();

  MessageStartGameRsp(const MessageStartGameRsp& from);

  inline MessageStartGameRsp& operator=(const MessageStartGameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageStartGameRsp& default_instance();

  void Swap(MessageStartGameRsp* other);

  // implements Message ----------------------------------------------

  MessageStartGameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageStartGameRsp& from);
  void MergeFrom(const MessageStartGameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageStartGameRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageStartGameRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageDealReq : public ::google::protobuf::Message {
 public:
  MessageDealReq();
  virtual ~MessageDealReq();

  MessageDealReq(const MessageDealReq& from);

  inline MessageDealReq& operator=(const MessageDealReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDealReq& default_instance();

  void Swap(MessageDealReq* other);

  // implements Message ----------------------------------------------

  MessageDealReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDealReq& from);
  void MergeFrom(const MessageDealReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageDealReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageDealReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageDealRsp : public ::google::protobuf::Message {
 public:
  MessageDealRsp();
  virtual ~MessageDealRsp();

  MessageDealRsp(const MessageDealRsp& from);

  inline MessageDealRsp& operator=(const MessageDealRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDealRsp& default_instance();

  void Swap(MessageDealRsp* other);

  // implements Message ----------------------------------------------

  MessageDealRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDealRsp& from);
  void MergeFrom(const MessageDealRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 upNum = 1;
  inline bool has_upnum() const;
  inline void clear_upnum();
  static const int kUpNumFieldNumber = 1;
  inline ::google::protobuf::int32 upnum() const;
  inline void set_upnum(::google::protobuf::int32 value);

  // optional int32 downNum = 2;
  inline bool has_downnum() const;
  inline void clear_downnum();
  static const int kDownNumFieldNumber = 2;
  inline ::google::protobuf::int32 downnum() const;
  inline void set_downnum(::google::protobuf::int32 value);

  // repeated .MessageDataPoker pokerList = 3;
  inline int pokerlist_size() const;
  inline void clear_pokerlist();
  static const int kPokerListFieldNumber = 3;
  inline const ::MessageDataPoker& pokerlist(int index) const;
  inline ::MessageDataPoker* mutable_pokerlist(int index);
  inline ::MessageDataPoker* add_pokerlist();
  inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
      pokerlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
      mutable_pokerlist();

  // @@protoc_insertion_point(class_scope:MessageDealRsp)
 private:
  inline void set_has_upnum();
  inline void clear_has_upnum();
  inline void set_has_downnum();
  inline void clear_has_downnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 upnum_;
  ::google::protobuf::int32 downnum_;
  ::google::protobuf::RepeatedPtrField< ::MessageDataPoker > pokerlist_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageDealRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageUpdateStateReq : public ::google::protobuf::Message {
 public:
  MessageUpdateStateReq();
  virtual ~MessageUpdateStateReq();

  MessageUpdateStateReq(const MessageUpdateStateReq& from);

  inline MessageUpdateStateReq& operator=(const MessageUpdateStateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageUpdateStateReq& default_instance();

  void Swap(MessageUpdateStateReq* other);

  // implements Message ----------------------------------------------

  MessageUpdateStateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageUpdateStateReq& from);
  void MergeFrom(const MessageUpdateStateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageUpdateStateReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageUpdateStateReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageUpdateStateRsp : public ::google::protobuf::Message {
 public:
  MessageUpdateStateRsp();
  virtual ~MessageUpdateStateRsp();

  MessageUpdateStateRsp(const MessageUpdateStateRsp& from);

  inline MessageUpdateStateRsp& operator=(const MessageUpdateStateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageUpdateStateRsp& default_instance();

  void Swap(MessageUpdateStateRsp* other);

  // implements Message ----------------------------------------------

  MessageUpdateStateRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageUpdateStateRsp& from);
  void MergeFrom(const MessageUpdateStateRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 playerIdx = 1;
  inline bool has_playeridx() const;
  inline void clear_playeridx();
  static const int kPlayerIdxFieldNumber = 1;
  inline ::google::protobuf::int32 playeridx() const;
  inline void set_playeridx(::google::protobuf::int32 value);

  // optional int32 stateType = 2;
  inline bool has_statetype() const;
  inline void clear_statetype();
  static const int kStateTypeFieldNumber = 2;
  inline ::google::protobuf::int32 statetype() const;
  inline void set_statetype(::google::protobuf::int32 value);

  // repeated .MessageDataPoker midPoker = 3;
  inline int midpoker_size() const;
  inline void clear_midpoker();
  static const int kMidPokerFieldNumber = 3;
  inline const ::MessageDataPoker& midpoker(int index) const;
  inline ::MessageDataPoker* mutable_midpoker(int index);
  inline ::MessageDataPoker* add_midpoker();
  inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
      midpoker() const;
  inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
      mutable_midpoker();

  // repeated .MessageDataPoker landlordPoker = 4;
  inline int landlordpoker_size() const;
  inline void clear_landlordpoker();
  static const int kLandlordPokerFieldNumber = 4;
  inline const ::MessageDataPoker& landlordpoker(int index) const;
  inline ::MessageDataPoker* mutable_landlordpoker(int index);
  inline ::MessageDataPoker* add_landlordpoker();
  inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
      landlordpoker() const;
  inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
      mutable_landlordpoker();

  // repeated .MessageDataPoker selfPoker = 5;
  inline int selfpoker_size() const;
  inline void clear_selfpoker();
  static const int kSelfPokerFieldNumber = 5;
  inline const ::MessageDataPoker& selfpoker(int index) const;
  inline ::MessageDataPoker* mutable_selfpoker(int index);
  inline ::MessageDataPoker* add_selfpoker();
  inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
      selfpoker() const;
  inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
      mutable_selfpoker();

  // optional int32 upPokerNum = 6;
  inline bool has_uppokernum() const;
  inline void clear_uppokernum();
  static const int kUpPokerNumFieldNumber = 6;
  inline ::google::protobuf::int32 uppokernum() const;
  inline void set_uppokernum(::google::protobuf::int32 value);

  // optional int32 downPokerNum = 7;
  inline bool has_downpokernum() const;
  inline void clear_downpokernum();
  static const int kDownPokerNumFieldNumber = 7;
  inline ::google::protobuf::int32 downpokernum() const;
  inline void set_downpokernum(::google::protobuf::int32 value);

  // optional uint32 laveTime = 8;
  inline bool has_lavetime() const;
  inline void clear_lavetime();
  static const int kLaveTimeFieldNumber = 8;
  inline ::google::protobuf::uint32 lavetime() const;
  inline void set_lavetime(::google::protobuf::uint32 value);

  // optional int32 lastIsGrad = 9;
  inline bool has_lastisgrad() const;
  inline void clear_lastisgrad();
  static const int kLastIsGradFieldNumber = 9;
  inline ::google::protobuf::int32 lastisgrad() const;
  inline void set_lastisgrad(::google::protobuf::int32 value);

  // optional int32 lastIsOut = 10;
  inline bool has_lastisout() const;
  inline void clear_lastisout();
  static const int kLastIsOutFieldNumber = 10;
  inline ::google::protobuf::int32 lastisout() const;
  inline void set_lastisout(::google::protobuf::int32 value);

  // optional int32 landlordIdx = 11;
  inline bool has_landlordidx() const;
  inline void clear_landlordidx();
  static const int kLandlordIdxFieldNumber = 11;
  inline ::google::protobuf::int32 landlordidx() const;
  inline void set_landlordidx(::google::protobuf::int32 value);

  // optional int32 lastOutPlayerIdx = 12;
  inline bool has_lastoutplayeridx() const;
  inline void clear_lastoutplayeridx();
  static const int kLastOutPlayerIdxFieldNumber = 12;
  inline ::google::protobuf::int32 lastoutplayeridx() const;
  inline void set_lastoutplayeridx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageUpdateStateRsp)
 private:
  inline void set_has_playeridx();
  inline void clear_has_playeridx();
  inline void set_has_statetype();
  inline void clear_has_statetype();
  inline void set_has_uppokernum();
  inline void clear_has_uppokernum();
  inline void set_has_downpokernum();
  inline void clear_has_downpokernum();
  inline void set_has_lavetime();
  inline void clear_has_lavetime();
  inline void set_has_lastisgrad();
  inline void clear_has_lastisgrad();
  inline void set_has_lastisout();
  inline void clear_has_lastisout();
  inline void set_has_landlordidx();
  inline void clear_has_landlordidx();
  inline void set_has_lastoutplayeridx();
  inline void clear_has_lastoutplayeridx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 playeridx_;
  ::google::protobuf::int32 statetype_;
  ::google::protobuf::RepeatedPtrField< ::MessageDataPoker > midpoker_;
  ::google::protobuf::RepeatedPtrField< ::MessageDataPoker > landlordpoker_;
  ::google::protobuf::RepeatedPtrField< ::MessageDataPoker > selfpoker_;
  ::google::protobuf::int32 uppokernum_;
  ::google::protobuf::int32 downpokernum_;
  ::google::protobuf::uint32 lavetime_;
  ::google::protobuf::int32 lastisgrad_;
  ::google::protobuf::int32 lastisout_;
  ::google::protobuf::int32 landlordidx_;
  ::google::protobuf::int32 lastoutplayeridx_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageUpdateStateRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageGradLandlordReq : public ::google::protobuf::Message {
 public:
  MessageGradLandlordReq();
  virtual ~MessageGradLandlordReq();

  MessageGradLandlordReq(const MessageGradLandlordReq& from);

  inline MessageGradLandlordReq& operator=(const MessageGradLandlordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageGradLandlordReq& default_instance();

  void Swap(MessageGradLandlordReq* other);

  // implements Message ----------------------------------------------

  MessageGradLandlordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageGradLandlordReq& from);
  void MergeFrom(const MessageGradLandlordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isGrad = 1;
  inline bool has_isgrad() const;
  inline void clear_isgrad();
  static const int kIsGradFieldNumber = 1;
  inline bool isgrad() const;
  inline void set_isgrad(bool value);

  // @@protoc_insertion_point(class_scope:MessageGradLandlordReq)
 private:
  inline void set_has_isgrad();
  inline void clear_has_isgrad();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool isgrad_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageGradLandlordReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageGradLandlordRsp : public ::google::protobuf::Message {
 public:
  MessageGradLandlordRsp();
  virtual ~MessageGradLandlordRsp();

  MessageGradLandlordRsp(const MessageGradLandlordRsp& from);

  inline MessageGradLandlordRsp& operator=(const MessageGradLandlordRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageGradLandlordRsp& default_instance();

  void Swap(MessageGradLandlordRsp* other);

  // implements Message ----------------------------------------------

  MessageGradLandlordRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageGradLandlordRsp& from);
  void MergeFrom(const MessageGradLandlordRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageGradLandlordRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageGradLandlordRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageOutPokerReq : public ::google::protobuf::Message {
 public:
  MessageOutPokerReq();
  virtual ~MessageOutPokerReq();

  MessageOutPokerReq(const MessageOutPokerReq& from);

  inline MessageOutPokerReq& operator=(const MessageOutPokerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageOutPokerReq& default_instance();

  void Swap(MessageOutPokerReq* other);

  // implements Message ----------------------------------------------

  MessageOutPokerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageOutPokerReq& from);
  void MergeFrom(const MessageOutPokerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .MessageDataPoker poker = 1;
  inline int poker_size() const;
  inline void clear_poker();
  static const int kPokerFieldNumber = 1;
  inline const ::MessageDataPoker& poker(int index) const;
  inline ::MessageDataPoker* mutable_poker(int index);
  inline ::MessageDataPoker* add_poker();
  inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
      poker() const;
  inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
      mutable_poker();

  // @@protoc_insertion_point(class_scope:MessageOutPokerReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::MessageDataPoker > poker_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageOutPokerReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageOutPokerRsp : public ::google::protobuf::Message {
 public:
  MessageOutPokerRsp();
  virtual ~MessageOutPokerRsp();

  MessageOutPokerRsp(const MessageOutPokerRsp& from);

  inline MessageOutPokerRsp& operator=(const MessageOutPokerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageOutPokerRsp& default_instance();

  void Swap(MessageOutPokerRsp* other);

  // implements Message ----------------------------------------------

  MessageOutPokerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageOutPokerRsp& from);
  void MergeFrom(const MessageOutPokerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageOutPokerRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageOutPokerRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageGameResultReq : public ::google::protobuf::Message {
 public:
  MessageGameResultReq();
  virtual ~MessageGameResultReq();

  MessageGameResultReq(const MessageGameResultReq& from);

  inline MessageGameResultReq& operator=(const MessageGameResultReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageGameResultReq& default_instance();

  void Swap(MessageGameResultReq* other);

  // implements Message ----------------------------------------------

  MessageGameResultReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageGameResultReq& from);
  void MergeFrom(const MessageGameResultReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MessageGameResultReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageGameResultReq* default_instance_;
};
// -------------------------------------------------------------------

class MessageGameResultRsp : public ::google::protobuf::Message {
 public:
  MessageGameResultRsp();
  virtual ~MessageGameResultRsp();

  MessageGameResultRsp(const MessageGameResultRsp& from);

  inline MessageGameResultRsp& operator=(const MessageGameResultRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageGameResultRsp& default_instance();

  void Swap(MessageGameResultRsp* other);

  // implements Message ----------------------------------------------

  MessageGameResultRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageGameResultRsp& from);
  void MergeFrom(const MessageGameResultRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isWinning = 1;
  inline bool has_iswinning() const;
  inline void clear_iswinning();
  static const int kIsWinningFieldNumber = 1;
  inline bool iswinning() const;
  inline void set_iswinning(bool value);

  // @@protoc_insertion_point(class_scope:MessageGameResultRsp)
 private:
  inline void set_has_iswinning();
  inline void clear_has_iswinning();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool iswinning_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageGameResultRsp* default_instance_;
};
// -------------------------------------------------------------------

class MessageDataPoker : public ::google::protobuf::Message {
 public:
  MessageDataPoker();
  virtual ~MessageDataPoker();

  MessageDataPoker(const MessageDataPoker& from);

  inline MessageDataPoker& operator=(const MessageDataPoker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDataPoker& default_instance();

  void Swap(MessageDataPoker* other);

  // implements Message ----------------------------------------------

  MessageDataPoker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDataPoker& from);
  void MergeFrom(const MessageDataPoker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 color = 1;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 1;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // optional int32 number = 2;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 2;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MessageDataPoker)
 private:
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 number_;
  friend void  protobuf_AddDesc_cmd_2eproto();
  friend void protobuf_AssignDesc_cmd_2eproto();
  friend void protobuf_ShutdownFile_cmd_2eproto();

  void InitAsDefaultInstance();
  static MessageDataPoker* default_instance_;
};
// ===================================================================


// ===================================================================

// MainProto

// required int32 playerID = 1;
inline bool MainProto::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MainProto::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MainProto::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MainProto::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 MainProto::playerid() const {
  // @@protoc_insertion_point(field_get:MainProto.playerID)
  return playerid_;
}
inline void MainProto::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MainProto.playerID)
}

// required int32 messageID = 2;
inline bool MainProto::has_messageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MainProto::set_has_messageid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MainProto::clear_has_messageid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MainProto::clear_messageid() {
  messageid_ = 0;
  clear_has_messageid();
}
inline ::google::protobuf::int32 MainProto::messageid() const {
  // @@protoc_insertion_point(field_get:MainProto.messageID)
  return messageid_;
}
inline void MainProto::set_messageid(::google::protobuf::int32 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:MainProto.messageID)
}

// optional string messageName = 3;
inline bool MainProto::has_messagename() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MainProto::set_has_messagename() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MainProto::clear_has_messagename() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MainProto::clear_messagename() {
  if (messagename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagename_->clear();
  }
  clear_has_messagename();
}
inline const ::std::string& MainProto::messagename() const {
  // @@protoc_insertion_point(field_get:MainProto.messageName)
  return *messagename_;
}
inline void MainProto::set_messagename(const ::std::string& value) {
  set_has_messagename();
  if (messagename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagename_ = new ::std::string;
  }
  messagename_->assign(value);
  // @@protoc_insertion_point(field_set:MainProto.messageName)
}
inline void MainProto::set_messagename(const char* value) {
  set_has_messagename();
  if (messagename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagename_ = new ::std::string;
  }
  messagename_->assign(value);
  // @@protoc_insertion_point(field_set_char:MainProto.messageName)
}
inline void MainProto::set_messagename(const char* value, size_t size) {
  set_has_messagename();
  if (messagename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagename_ = new ::std::string;
  }
  messagename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MainProto.messageName)
}
inline ::std::string* MainProto::mutable_messagename() {
  set_has_messagename();
  if (messagename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MainProto.messageName)
  return messagename_;
}
inline ::std::string* MainProto::release_messagename() {
  clear_has_messagename();
  if (messagename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = messagename_;
    messagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MainProto::set_allocated_messagename(::std::string* messagename) {
  if (messagename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagename_;
  }
  if (messagename) {
    set_has_messagename();
    messagename_ = messagename;
  } else {
    clear_has_messagename();
    messagename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MainProto.messageName)
}

// optional string messageData = 4;
inline bool MainProto::has_messagedata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MainProto::set_has_messagedata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MainProto::clear_has_messagedata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MainProto::clear_messagedata() {
  if (messagedata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagedata_->clear();
  }
  clear_has_messagedata();
}
inline const ::std::string& MainProto::messagedata() const {
  // @@protoc_insertion_point(field_get:MainProto.messageData)
  return *messagedata_;
}
inline void MainProto::set_messagedata(const ::std::string& value) {
  set_has_messagedata();
  if (messagedata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagedata_ = new ::std::string;
  }
  messagedata_->assign(value);
  // @@protoc_insertion_point(field_set:MainProto.messageData)
}
inline void MainProto::set_messagedata(const char* value) {
  set_has_messagedata();
  if (messagedata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagedata_ = new ::std::string;
  }
  messagedata_->assign(value);
  // @@protoc_insertion_point(field_set_char:MainProto.messageData)
}
inline void MainProto::set_messagedata(const char* value, size_t size) {
  set_has_messagedata();
  if (messagedata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagedata_ = new ::std::string;
  }
  messagedata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MainProto.messageData)
}
inline ::std::string* MainProto::mutable_messagedata() {
  set_has_messagedata();
  if (messagedata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messagedata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MainProto.messageData)
  return messagedata_;
}
inline ::std::string* MainProto::release_messagedata() {
  clear_has_messagedata();
  if (messagedata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = messagedata_;
    messagedata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MainProto::set_allocated_messagedata(::std::string* messagedata) {
  if (messagedata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messagedata_;
  }
  if (messagedata) {
    set_has_messagedata();
    messagedata_ = messagedata;
  } else {
    clear_has_messagedata();
    messagedata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MainProto.messageData)
}

// optional double serverTime = 5;
inline bool MainProto::has_servertime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MainProto::set_has_servertime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MainProto::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MainProto::clear_servertime() {
  servertime_ = 0;
  clear_has_servertime();
}
inline double MainProto::servertime() const {
  // @@protoc_insertion_point(field_get:MainProto.serverTime)
  return servertime_;
}
inline void MainProto::set_servertime(double value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:MainProto.serverTime)
}

// -------------------------------------------------------------------

// MessagePeopleReq

// optional int32 peopleID = 1;
inline bool MessagePeopleReq::has_peopleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessagePeopleReq::set_has_peopleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessagePeopleReq::clear_has_peopleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessagePeopleReq::clear_peopleid() {
  peopleid_ = 0;
  clear_has_peopleid();
}
inline ::google::protobuf::int32 MessagePeopleReq::peopleid() const {
  // @@protoc_insertion_point(field_get:MessagePeopleReq.peopleID)
  return peopleid_;
}
inline void MessagePeopleReq::set_peopleid(::google::protobuf::int32 value) {
  set_has_peopleid();
  peopleid_ = value;
  // @@protoc_insertion_point(field_set:MessagePeopleReq.peopleID)
}

// optional bool isChina = 2;
inline bool MessagePeopleReq::has_ischina() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessagePeopleReq::set_has_ischina() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessagePeopleReq::clear_has_ischina() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessagePeopleReq::clear_ischina() {
  ischina_ = false;
  clear_has_ischina();
}
inline bool MessagePeopleReq::ischina() const {
  // @@protoc_insertion_point(field_get:MessagePeopleReq.isChina)
  return ischina_;
}
inline void MessagePeopleReq::set_ischina(bool value) {
  set_has_ischina();
  ischina_ = value;
  // @@protoc_insertion_point(field_set:MessagePeopleReq.isChina)
}

// -------------------------------------------------------------------

// MessagePeopleRsp

// optional string name = 1;
inline bool MessagePeopleRsp::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessagePeopleRsp::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessagePeopleRsp::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessagePeopleRsp::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MessagePeopleRsp::name() const {
  // @@protoc_insertion_point(field_get:MessagePeopleRsp.name)
  return *name_;
}
inline void MessagePeopleRsp::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:MessagePeopleRsp.name)
}
inline void MessagePeopleRsp::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:MessagePeopleRsp.name)
}
inline void MessagePeopleRsp::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessagePeopleRsp.name)
}
inline ::std::string* MessagePeopleRsp::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MessagePeopleRsp.name)
  return name_;
}
inline ::std::string* MessagePeopleRsp::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessagePeopleRsp::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MessagePeopleRsp.name)
}

// optional string phone = 2;
inline bool MessagePeopleRsp::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessagePeopleRsp::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessagePeopleRsp::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessagePeopleRsp::clear_phone() {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& MessagePeopleRsp::phone() const {
  // @@protoc_insertion_point(field_get:MessagePeopleRsp.phone)
  return *phone_;
}
inline void MessagePeopleRsp::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set:MessagePeopleRsp.phone)
}
inline void MessagePeopleRsp::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
  // @@protoc_insertion_point(field_set_char:MessagePeopleRsp.phone)
}
inline void MessagePeopleRsp::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MessagePeopleRsp.phone)
}
inline ::std::string* MessagePeopleRsp::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    phone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MessagePeopleRsp.phone)
  return phone_;
}
inline ::std::string* MessagePeopleRsp::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessagePeopleRsp::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MessagePeopleRsp.phone)
}

// optional int32 age = 3;
inline bool MessagePeopleRsp::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessagePeopleRsp::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessagePeopleRsp::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessagePeopleRsp::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 MessagePeopleRsp::age() const {
  // @@protoc_insertion_point(field_get:MessagePeopleRsp.age)
  return age_;
}
inline void MessagePeopleRsp::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:MessagePeopleRsp.age)
}

// -------------------------------------------------------------------

// MessageLoginReq

// -------------------------------------------------------------------

// MessageLoginRsp

// optional int32 playerID = 1;
inline bool MessageLoginRsp::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageLoginRsp::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageLoginRsp::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageLoginRsp::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 MessageLoginRsp::playerid() const {
  // @@protoc_insertion_point(field_get:MessageLoginRsp.playerID)
  return playerid_;
}
inline void MessageLoginRsp::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:MessageLoginRsp.playerID)
}

// -------------------------------------------------------------------

// MessageStartGameReq

// -------------------------------------------------------------------

// MessageStartGameRsp

// -------------------------------------------------------------------

// MessageDealReq

// -------------------------------------------------------------------

// MessageDealRsp

// optional int32 upNum = 1;
inline bool MessageDealRsp::has_upnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageDealRsp::set_has_upnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageDealRsp::clear_has_upnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageDealRsp::clear_upnum() {
  upnum_ = 0;
  clear_has_upnum();
}
inline ::google::protobuf::int32 MessageDealRsp::upnum() const {
  // @@protoc_insertion_point(field_get:MessageDealRsp.upNum)
  return upnum_;
}
inline void MessageDealRsp::set_upnum(::google::protobuf::int32 value) {
  set_has_upnum();
  upnum_ = value;
  // @@protoc_insertion_point(field_set:MessageDealRsp.upNum)
}

// optional int32 downNum = 2;
inline bool MessageDealRsp::has_downnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageDealRsp::set_has_downnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageDealRsp::clear_has_downnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageDealRsp::clear_downnum() {
  downnum_ = 0;
  clear_has_downnum();
}
inline ::google::protobuf::int32 MessageDealRsp::downnum() const {
  // @@protoc_insertion_point(field_get:MessageDealRsp.downNum)
  return downnum_;
}
inline void MessageDealRsp::set_downnum(::google::protobuf::int32 value) {
  set_has_downnum();
  downnum_ = value;
  // @@protoc_insertion_point(field_set:MessageDealRsp.downNum)
}

// repeated .MessageDataPoker pokerList = 3;
inline int MessageDealRsp::pokerlist_size() const {
  return pokerlist_.size();
}
inline void MessageDealRsp::clear_pokerlist() {
  pokerlist_.Clear();
}
inline const ::MessageDataPoker& MessageDealRsp::pokerlist(int index) const {
  // @@protoc_insertion_point(field_get:MessageDealRsp.pokerList)
  return pokerlist_.Get(index);
}
inline ::MessageDataPoker* MessageDealRsp::mutable_pokerlist(int index) {
  // @@protoc_insertion_point(field_mutable:MessageDealRsp.pokerList)
  return pokerlist_.Mutable(index);
}
inline ::MessageDataPoker* MessageDealRsp::add_pokerlist() {
  // @@protoc_insertion_point(field_add:MessageDealRsp.pokerList)
  return pokerlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageDealRsp::pokerlist() const {
  // @@protoc_insertion_point(field_list:MessageDealRsp.pokerList)
  return pokerlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageDealRsp::mutable_pokerlist() {
  // @@protoc_insertion_point(field_mutable_list:MessageDealRsp.pokerList)
  return &pokerlist_;
}

// -------------------------------------------------------------------

// MessageUpdateStateReq

// -------------------------------------------------------------------

// MessageUpdateStateRsp

// optional int32 playerIdx = 1;
inline bool MessageUpdateStateRsp::has_playeridx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageUpdateStateRsp::set_has_playeridx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageUpdateStateRsp::clear_has_playeridx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageUpdateStateRsp::clear_playeridx() {
  playeridx_ = 0;
  clear_has_playeridx();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::playeridx() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.playerIdx)
  return playeridx_;
}
inline void MessageUpdateStateRsp::set_playeridx(::google::protobuf::int32 value) {
  set_has_playeridx();
  playeridx_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.playerIdx)
}

// optional int32 stateType = 2;
inline bool MessageUpdateStateRsp::has_statetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageUpdateStateRsp::set_has_statetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageUpdateStateRsp::clear_has_statetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageUpdateStateRsp::clear_statetype() {
  statetype_ = 0;
  clear_has_statetype();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::statetype() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.stateType)
  return statetype_;
}
inline void MessageUpdateStateRsp::set_statetype(::google::protobuf::int32 value) {
  set_has_statetype();
  statetype_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.stateType)
}

// repeated .MessageDataPoker midPoker = 3;
inline int MessageUpdateStateRsp::midpoker_size() const {
  return midpoker_.size();
}
inline void MessageUpdateStateRsp::clear_midpoker() {
  midpoker_.Clear();
}
inline const ::MessageDataPoker& MessageUpdateStateRsp::midpoker(int index) const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.midPoker)
  return midpoker_.Get(index);
}
inline ::MessageDataPoker* MessageUpdateStateRsp::mutable_midpoker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageUpdateStateRsp.midPoker)
  return midpoker_.Mutable(index);
}
inline ::MessageDataPoker* MessageUpdateStateRsp::add_midpoker() {
  // @@protoc_insertion_point(field_add:MessageUpdateStateRsp.midPoker)
  return midpoker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageUpdateStateRsp::midpoker() const {
  // @@protoc_insertion_point(field_list:MessageUpdateStateRsp.midPoker)
  return midpoker_;
}
inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageUpdateStateRsp::mutable_midpoker() {
  // @@protoc_insertion_point(field_mutable_list:MessageUpdateStateRsp.midPoker)
  return &midpoker_;
}

// repeated .MessageDataPoker landlordPoker = 4;
inline int MessageUpdateStateRsp::landlordpoker_size() const {
  return landlordpoker_.size();
}
inline void MessageUpdateStateRsp::clear_landlordpoker() {
  landlordpoker_.Clear();
}
inline const ::MessageDataPoker& MessageUpdateStateRsp::landlordpoker(int index) const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_.Get(index);
}
inline ::MessageDataPoker* MessageUpdateStateRsp::mutable_landlordpoker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_.Mutable(index);
}
inline ::MessageDataPoker* MessageUpdateStateRsp::add_landlordpoker() {
  // @@protoc_insertion_point(field_add:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageUpdateStateRsp::landlordpoker() const {
  // @@protoc_insertion_point(field_list:MessageUpdateStateRsp.landlordPoker)
  return landlordpoker_;
}
inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageUpdateStateRsp::mutable_landlordpoker() {
  // @@protoc_insertion_point(field_mutable_list:MessageUpdateStateRsp.landlordPoker)
  return &landlordpoker_;
}

// repeated .MessageDataPoker selfPoker = 5;
inline int MessageUpdateStateRsp::selfpoker_size() const {
  return selfpoker_.size();
}
inline void MessageUpdateStateRsp::clear_selfpoker() {
  selfpoker_.Clear();
}
inline const ::MessageDataPoker& MessageUpdateStateRsp::selfpoker(int index) const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.selfPoker)
  return selfpoker_.Get(index);
}
inline ::MessageDataPoker* MessageUpdateStateRsp::mutable_selfpoker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageUpdateStateRsp.selfPoker)
  return selfpoker_.Mutable(index);
}
inline ::MessageDataPoker* MessageUpdateStateRsp::add_selfpoker() {
  // @@protoc_insertion_point(field_add:MessageUpdateStateRsp.selfPoker)
  return selfpoker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageUpdateStateRsp::selfpoker() const {
  // @@protoc_insertion_point(field_list:MessageUpdateStateRsp.selfPoker)
  return selfpoker_;
}
inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageUpdateStateRsp::mutable_selfpoker() {
  // @@protoc_insertion_point(field_mutable_list:MessageUpdateStateRsp.selfPoker)
  return &selfpoker_;
}

// optional int32 upPokerNum = 6;
inline bool MessageUpdateStateRsp::has_uppokernum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageUpdateStateRsp::set_has_uppokernum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageUpdateStateRsp::clear_has_uppokernum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageUpdateStateRsp::clear_uppokernum() {
  uppokernum_ = 0;
  clear_has_uppokernum();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::uppokernum() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.upPokerNum)
  return uppokernum_;
}
inline void MessageUpdateStateRsp::set_uppokernum(::google::protobuf::int32 value) {
  set_has_uppokernum();
  uppokernum_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.upPokerNum)
}

// optional int32 downPokerNum = 7;
inline bool MessageUpdateStateRsp::has_downpokernum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MessageUpdateStateRsp::set_has_downpokernum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MessageUpdateStateRsp::clear_has_downpokernum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MessageUpdateStateRsp::clear_downpokernum() {
  downpokernum_ = 0;
  clear_has_downpokernum();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::downpokernum() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.downPokerNum)
  return downpokernum_;
}
inline void MessageUpdateStateRsp::set_downpokernum(::google::protobuf::int32 value) {
  set_has_downpokernum();
  downpokernum_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.downPokerNum)
}

// optional uint32 laveTime = 8;
inline bool MessageUpdateStateRsp::has_lavetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MessageUpdateStateRsp::set_has_lavetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MessageUpdateStateRsp::clear_has_lavetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MessageUpdateStateRsp::clear_lavetime() {
  lavetime_ = 0u;
  clear_has_lavetime();
}
inline ::google::protobuf::uint32 MessageUpdateStateRsp::lavetime() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.laveTime)
  return lavetime_;
}
inline void MessageUpdateStateRsp::set_lavetime(::google::protobuf::uint32 value) {
  set_has_lavetime();
  lavetime_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.laveTime)
}

// optional int32 lastIsGrad = 9;
inline bool MessageUpdateStateRsp::has_lastisgrad() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MessageUpdateStateRsp::set_has_lastisgrad() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MessageUpdateStateRsp::clear_has_lastisgrad() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MessageUpdateStateRsp::clear_lastisgrad() {
  lastisgrad_ = 0;
  clear_has_lastisgrad();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::lastisgrad() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.lastIsGrad)
  return lastisgrad_;
}
inline void MessageUpdateStateRsp::set_lastisgrad(::google::protobuf::int32 value) {
  set_has_lastisgrad();
  lastisgrad_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.lastIsGrad)
}

// optional int32 lastIsOut = 10;
inline bool MessageUpdateStateRsp::has_lastisout() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MessageUpdateStateRsp::set_has_lastisout() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MessageUpdateStateRsp::clear_has_lastisout() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MessageUpdateStateRsp::clear_lastisout() {
  lastisout_ = 0;
  clear_has_lastisout();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::lastisout() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.lastIsOut)
  return lastisout_;
}
inline void MessageUpdateStateRsp::set_lastisout(::google::protobuf::int32 value) {
  set_has_lastisout();
  lastisout_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.lastIsOut)
}

// optional int32 landlordIdx = 11;
inline bool MessageUpdateStateRsp::has_landlordidx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MessageUpdateStateRsp::set_has_landlordidx() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MessageUpdateStateRsp::clear_has_landlordidx() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MessageUpdateStateRsp::clear_landlordidx() {
  landlordidx_ = 0;
  clear_has_landlordidx();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::landlordidx() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.landlordIdx)
  return landlordidx_;
}
inline void MessageUpdateStateRsp::set_landlordidx(::google::protobuf::int32 value) {
  set_has_landlordidx();
  landlordidx_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.landlordIdx)
}

// optional int32 lastOutPlayerIdx = 12;
inline bool MessageUpdateStateRsp::has_lastoutplayeridx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void MessageUpdateStateRsp::set_has_lastoutplayeridx() {
  _has_bits_[0] |= 0x00000800u;
}
inline void MessageUpdateStateRsp::clear_has_lastoutplayeridx() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void MessageUpdateStateRsp::clear_lastoutplayeridx() {
  lastoutplayeridx_ = 0;
  clear_has_lastoutplayeridx();
}
inline ::google::protobuf::int32 MessageUpdateStateRsp::lastoutplayeridx() const {
  // @@protoc_insertion_point(field_get:MessageUpdateStateRsp.lastOutPlayerIdx)
  return lastoutplayeridx_;
}
inline void MessageUpdateStateRsp::set_lastoutplayeridx(::google::protobuf::int32 value) {
  set_has_lastoutplayeridx();
  lastoutplayeridx_ = value;
  // @@protoc_insertion_point(field_set:MessageUpdateStateRsp.lastOutPlayerIdx)
}

// -------------------------------------------------------------------

// MessageGradLandlordReq

// optional bool isGrad = 1;
inline bool MessageGradLandlordReq::has_isgrad() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageGradLandlordReq::set_has_isgrad() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageGradLandlordReq::clear_has_isgrad() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageGradLandlordReq::clear_isgrad() {
  isgrad_ = false;
  clear_has_isgrad();
}
inline bool MessageGradLandlordReq::isgrad() const {
  // @@protoc_insertion_point(field_get:MessageGradLandlordReq.isGrad)
  return isgrad_;
}
inline void MessageGradLandlordReq::set_isgrad(bool value) {
  set_has_isgrad();
  isgrad_ = value;
  // @@protoc_insertion_point(field_set:MessageGradLandlordReq.isGrad)
}

// -------------------------------------------------------------------

// MessageGradLandlordRsp

// -------------------------------------------------------------------

// MessageOutPokerReq

// repeated .MessageDataPoker poker = 1;
inline int MessageOutPokerReq::poker_size() const {
  return poker_.size();
}
inline void MessageOutPokerReq::clear_poker() {
  poker_.Clear();
}
inline const ::MessageDataPoker& MessageOutPokerReq::poker(int index) const {
  // @@protoc_insertion_point(field_get:MessageOutPokerReq.poker)
  return poker_.Get(index);
}
inline ::MessageDataPoker* MessageOutPokerReq::mutable_poker(int index) {
  // @@protoc_insertion_point(field_mutable:MessageOutPokerReq.poker)
  return poker_.Mutable(index);
}
inline ::MessageDataPoker* MessageOutPokerReq::add_poker() {
  // @@protoc_insertion_point(field_add:MessageOutPokerReq.poker)
  return poker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >&
MessageOutPokerReq::poker() const {
  // @@protoc_insertion_point(field_list:MessageOutPokerReq.poker)
  return poker_;
}
inline ::google::protobuf::RepeatedPtrField< ::MessageDataPoker >*
MessageOutPokerReq::mutable_poker() {
  // @@protoc_insertion_point(field_mutable_list:MessageOutPokerReq.poker)
  return &poker_;
}

// -------------------------------------------------------------------

// MessageOutPokerRsp

// -------------------------------------------------------------------

// MessageGameResultReq

// -------------------------------------------------------------------

// MessageGameResultRsp

// optional bool isWinning = 1;
inline bool MessageGameResultRsp::has_iswinning() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageGameResultRsp::set_has_iswinning() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageGameResultRsp::clear_has_iswinning() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageGameResultRsp::clear_iswinning() {
  iswinning_ = false;
  clear_has_iswinning();
}
inline bool MessageGameResultRsp::iswinning() const {
  // @@protoc_insertion_point(field_get:MessageGameResultRsp.isWinning)
  return iswinning_;
}
inline void MessageGameResultRsp::set_iswinning(bool value) {
  set_has_iswinning();
  iswinning_ = value;
  // @@protoc_insertion_point(field_set:MessageGameResultRsp.isWinning)
}

// -------------------------------------------------------------------

// MessageDataPoker

// optional int32 color = 1;
inline bool MessageDataPoker::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageDataPoker::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageDataPoker::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageDataPoker::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 MessageDataPoker::color() const {
  // @@protoc_insertion_point(field_get:MessageDataPoker.color)
  return color_;
}
inline void MessageDataPoker::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:MessageDataPoker.color)
}

// optional int32 number = 2;
inline bool MessageDataPoker::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageDataPoker::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageDataPoker::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageDataPoker::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 MessageDataPoker::number() const {
  // @@protoc_insertion_point(field_get:MessageDataPoker.number)
  return number_;
}
inline void MessageDataPoker::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:MessageDataPoker.number)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2eproto__INCLUDED
